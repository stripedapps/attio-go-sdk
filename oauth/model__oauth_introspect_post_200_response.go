/*
Attio OAuth flow

Welcome to the Attio OAuth flow documentation. All of the OAuth APIs are documented here.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// OauthIntrospectPost200Response struct for OauthIntrospectPost200Response
type OauthIntrospectPost200Response struct {
	OauthIntrospectPost200ResponseAnyOf *OauthIntrospectPost200ResponseAnyOf
	OauthIntrospectPost200ResponseAnyOf1 *OauthIntrospectPost200ResponseAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *OauthIntrospectPost200Response) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into OauthIntrospectPost200ResponseAnyOf
	err = json.Unmarshal(data, &dst.OauthIntrospectPost200ResponseAnyOf);
	if err == nil {
		jsonOauthIntrospectPost200ResponseAnyOf, _ := json.Marshal(dst.OauthIntrospectPost200ResponseAnyOf)
		if string(jsonOauthIntrospectPost200ResponseAnyOf) == "{}" { // empty struct
			dst.OauthIntrospectPost200ResponseAnyOf = nil
		} else {
			return nil // data stored in dst.OauthIntrospectPost200ResponseAnyOf, return on the first match
		}
	} else {
		dst.OauthIntrospectPost200ResponseAnyOf = nil
	}

	// try to unmarshal JSON data into OauthIntrospectPost200ResponseAnyOf1
	err = json.Unmarshal(data, &dst.OauthIntrospectPost200ResponseAnyOf1);
	if err == nil {
		jsonOauthIntrospectPost200ResponseAnyOf1, _ := json.Marshal(dst.OauthIntrospectPost200ResponseAnyOf1)
		if string(jsonOauthIntrospectPost200ResponseAnyOf1) == "{}" { // empty struct
			dst.OauthIntrospectPost200ResponseAnyOf1 = nil
		} else {
			return nil // data stored in dst.OauthIntrospectPost200ResponseAnyOf1, return on the first match
		}
	} else {
		dst.OauthIntrospectPost200ResponseAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(OauthIntrospectPost200Response)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *OauthIntrospectPost200Response) MarshalJSON() ([]byte, error) {
	if src.OauthIntrospectPost200ResponseAnyOf != nil {
		return json.Marshal(&src.OauthIntrospectPost200ResponseAnyOf)
	}

	if src.OauthIntrospectPost200ResponseAnyOf1 != nil {
		return json.Marshal(&src.OauthIntrospectPost200ResponseAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableOauthIntrospectPost200Response struct {
	value *OauthIntrospectPost200Response
	isSet bool
}

func (v NullableOauthIntrospectPost200Response) Get() *OauthIntrospectPost200Response {
	return v.value
}

func (v *NullableOauthIntrospectPost200Response) Set(val *OauthIntrospectPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOauthIntrospectPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOauthIntrospectPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauthIntrospectPost200Response(val *OauthIntrospectPost200Response) *NullableOauthIntrospectPost200Response {
	return &NullableOauthIntrospectPost200Response{value: val, isSet: true}
}

func (v NullableOauthIntrospectPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauthIntrospectPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


