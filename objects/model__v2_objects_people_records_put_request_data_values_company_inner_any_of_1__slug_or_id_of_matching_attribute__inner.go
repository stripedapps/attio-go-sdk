/*
Attio Standard Objects

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner struct for V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner
type V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner struct {
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1 *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2 *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3 *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3
	V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner *V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf = nil
	}

	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1 = nil
	}

	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2 = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2 = nil
	}

	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3 = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3 = nil
	}

	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) MarshalJSON() ([]byte, error) {
	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf)
	}

	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1 != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf1)
	}

	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2 != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf2)
	}

	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3 != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInnerAnyOf3)
	}

	if src.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesEmailAddressesInner)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner struct {
	value *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner
	isSet bool
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) Get() *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner {
	return v.value
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) Set(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner {
	return &NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner{value: val, isSet: true}
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


