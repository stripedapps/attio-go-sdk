/*
Attio Standard Objects

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner{}

// V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner struct for V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner
type V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner struct {
	// A timestamp value represents a single, universal moment in time using an ISO 8601 formatted string. This means that a timestamp consists of a date, a time (with nanosecond precision), and a time zone. Attio will coerce timestamps which do not provide full nanosecond precision and UTC is assumed if no time zone is provided. For example, \"2023\", \"2023-01\", \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T13:00:00\", and \"2023-01-02T13:00:00.000000000\" will all be coerced to \"2023-01-02T13:00:00.000000000Z\". Timestamps are always returned in UTC. For example, writing a timestamp value using the string \"2023-01-02T13:00:00.000000000+02:00\" will result in the value \"2023-01-02T11:00:00.000000000Z\" being returned. The maximum date is \"9999-12-31T23:59:59.999999999Z\".
	Value string `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner

// NewV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner instantiates a new V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner(value string) *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner {
	this := V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner{}
	this.Value = value
	return &this
}

// NewV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInnerWithDefaults instantiates a new V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInnerWithDefaults() *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner {
	this := V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner{}
	return &this
}

// GetValue returns the Value field value
func (o *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) SetValue(v string) {
	o.Value = v
}

func (o V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner := _V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner{}

	err = json.Unmarshal(data, &varV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner)

	if err != nil {
		return err
	}

	*o = V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner(varV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner struct {
	value *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner
	isSet bool
}

func (v NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) Get() *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner {
	return v.value
}

func (v *NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) Set(val *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner(val *V2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) *NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner {
	return &NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner{value: val, isSet: true}
}

func (v NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsCompaniesRecordsPutRequestDataValuesFoundationDateInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


