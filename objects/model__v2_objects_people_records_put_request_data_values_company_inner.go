/*
Attio Standard Objects

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner struct for V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner
type V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner struct {
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf
	V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf = nil
	}

	// try to unmarshal JSON data into V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1
	err = json.Unmarshal(data, &dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1);
	if err == nil {
		jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1, _ := json.Marshal(dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1)
		if string(jsonV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) == "{}" { // empty struct
			dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1, return on the first match
		}
	} else {
		dst.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) MarshalJSON() ([]byte, error) {
	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf)
	}

	if src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 != nil {
		return json.Marshal(&src.V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner struct {
	value *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner
	isSet bool
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) Get() *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner {
	return v.value
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) Set(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner {
	return &NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner{value: val, isSet: true}
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


