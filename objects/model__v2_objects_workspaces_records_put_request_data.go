/*
Attio Standard Objects

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the V2ObjectsWorkspacesRecordsPutRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsWorkspacesRecordsPutRequestData{}

// V2ObjectsWorkspacesRecordsPutRequestData struct for V2ObjectsWorkspacesRecordsPutRequestData
type V2ObjectsWorkspacesRecordsPutRequestData struct {
	Values V2ObjectsWorkspacesRecordsPutRequestDataValues `json:"values"`
	AdditionalProperties map[string]interface{}
}

type _V2ObjectsWorkspacesRecordsPutRequestData V2ObjectsWorkspacesRecordsPutRequestData

// NewV2ObjectsWorkspacesRecordsPutRequestData instantiates a new V2ObjectsWorkspacesRecordsPutRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsWorkspacesRecordsPutRequestData(values V2ObjectsWorkspacesRecordsPutRequestDataValues) *V2ObjectsWorkspacesRecordsPutRequestData {
	this := V2ObjectsWorkspacesRecordsPutRequestData{}
	this.Values = values
	return &this
}

// NewV2ObjectsWorkspacesRecordsPutRequestDataWithDefaults instantiates a new V2ObjectsWorkspacesRecordsPutRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsWorkspacesRecordsPutRequestDataWithDefaults() *V2ObjectsWorkspacesRecordsPutRequestData {
	this := V2ObjectsWorkspacesRecordsPutRequestData{}
	return &this
}

// GetValues returns the Values field value
func (o *V2ObjectsWorkspacesRecordsPutRequestData) GetValues() V2ObjectsWorkspacesRecordsPutRequestDataValues {
	if o == nil {
		var ret V2ObjectsWorkspacesRecordsPutRequestDataValues
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsWorkspacesRecordsPutRequestData) GetValuesOk() (*V2ObjectsWorkspacesRecordsPutRequestDataValues, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *V2ObjectsWorkspacesRecordsPutRequestData) SetValues(v V2ObjectsWorkspacesRecordsPutRequestDataValues) {
	o.Values = v
}

func (o V2ObjectsWorkspacesRecordsPutRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsWorkspacesRecordsPutRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["values"] = o.Values

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V2ObjectsWorkspacesRecordsPutRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsWorkspacesRecordsPutRequestData := _V2ObjectsWorkspacesRecordsPutRequestData{}

	err = json.Unmarshal(data, &varV2ObjectsWorkspacesRecordsPutRequestData)

	if err != nil {
		return err
	}

	*o = V2ObjectsWorkspacesRecordsPutRequestData(varV2ObjectsWorkspacesRecordsPutRequestData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2ObjectsWorkspacesRecordsPutRequestData struct {
	value *V2ObjectsWorkspacesRecordsPutRequestData
	isSet bool
}

func (v NullableV2ObjectsWorkspacesRecordsPutRequestData) Get() *V2ObjectsWorkspacesRecordsPutRequestData {
	return v.value
}

func (v *NullableV2ObjectsWorkspacesRecordsPutRequestData) Set(val *V2ObjectsWorkspacesRecordsPutRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsWorkspacesRecordsPutRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsWorkspacesRecordsPutRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsWorkspacesRecordsPutRequestData(val *V2ObjectsWorkspacesRecordsPutRequestData) *NullableV2ObjectsWorkspacesRecordsPutRequestData {
	return &NullableV2ObjectsWorkspacesRecordsPutRequestData{value: val, isSet: true}
}

func (v NullableV2ObjectsWorkspacesRecordsPutRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsWorkspacesRecordsPutRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


