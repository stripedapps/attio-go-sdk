/*
Attio Standard Objects

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1{}

// V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 struct for V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1
type V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 struct {
	// A UUID or slug to identify the object that the referenced record belongs to.
	TargetObject string `json:"target_object"`
	// In addition to referencing records directly by record ID, you may also reference by a matching attribute of your choice. For example, if you want to add a reference to the person record with email \"alice@website.com\", you should pass a value with `target_object` set to `\"people\"` and `email_addresses` set to `[{email_address:\"alice@website.com\"}]`. The key should be the slug or ID of the matching attribute you would like to use and the value should be an array containing a single value of the appropriate attribute type (as specified below). Matching on multiple values is not currently supported. Matching attributes must be unique. This process is similar to how you use the `matching_attribute` query param in Attio's [assert endpoints](/reference/put_v2-objects-object-records).
	SlugOrIdOfMatchingAttribute []V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner `json:"[slug_or_id_of_matching_attribute]"`
}

type _V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1

// NewV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 instantiates a new V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1(targetObject string, slugOrIdOfMatchingAttribute []V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 {
	this := V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1{}
	this.TargetObject = targetObject
	this.SlugOrIdOfMatchingAttribute = slugOrIdOfMatchingAttribute
	return &this
}

// NewV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1WithDefaults instantiates a new V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1WithDefaults() *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 {
	this := V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1{}
	return &this
}

// GetTargetObject returns the TargetObject field value
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) GetTargetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetObject
}

// GetTargetObjectOk returns a tuple with the TargetObject field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) GetTargetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetObject, true
}

// SetTargetObject sets field value
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) SetTargetObject(v string) {
	o.TargetObject = v
}

// GetSlugOrIdOfMatchingAttribute returns the SlugOrIdOfMatchingAttribute field value
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) GetSlugOrIdOfMatchingAttribute() []V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner {
	if o == nil {
		var ret []V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner
		return ret
	}

	return o.SlugOrIdOfMatchingAttribute
}

// GetSlugOrIdOfMatchingAttributeOk returns a tuple with the SlugOrIdOfMatchingAttribute field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) GetSlugOrIdOfMatchingAttributeOk() ([]V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.SlugOrIdOfMatchingAttribute, true
}

// SetSlugOrIdOfMatchingAttribute sets field value
func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) SetSlugOrIdOfMatchingAttribute(v []V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1SlugOrIdOfMatchingAttributeInner) {
	o.SlugOrIdOfMatchingAttribute = v
}

func (o V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target_object"] = o.TargetObject
	toSerialize["[slug_or_id_of_matching_attribute]"] = o.SlugOrIdOfMatchingAttribute
	return toSerialize, nil
}

func (o *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"target_object",
		"[slug_or_id_of_matching_attribute]",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 := _V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1)

	if err != nil {
		return err
	}

	*o = V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1(varV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1)

	return err
}

type NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 struct {
	value *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1
	isSet bool
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) Get() *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 {
	return v.value
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) Set(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1(val *V2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1 {
	return &NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1{value: val, isSet: true}
}

func (v NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsPeopleRecordsPutRequestDataValuesCompanyInnerAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


