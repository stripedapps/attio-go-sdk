/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V2ObjectsObjectPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsObjectPatchRequest{}

// V2ObjectsObjectPatchRequest struct for V2ObjectsObjectPatchRequest
type V2ObjectsObjectPatchRequest struct {
	Data V2ObjectsObjectPatchRequestData `json:"data"`
}

type _V2ObjectsObjectPatchRequest V2ObjectsObjectPatchRequest

// NewV2ObjectsObjectPatchRequest instantiates a new V2ObjectsObjectPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsObjectPatchRequest(data V2ObjectsObjectPatchRequestData) *V2ObjectsObjectPatchRequest {
	this := V2ObjectsObjectPatchRequest{}
	this.Data = data
	return &this
}

// NewV2ObjectsObjectPatchRequestWithDefaults instantiates a new V2ObjectsObjectPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsObjectPatchRequestWithDefaults() *V2ObjectsObjectPatchRequest {
	this := V2ObjectsObjectPatchRequest{}
	return &this
}

// GetData returns the Data field value
func (o *V2ObjectsObjectPatchRequest) GetData() V2ObjectsObjectPatchRequestData {
	if o == nil {
		var ret V2ObjectsObjectPatchRequestData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsObjectPatchRequest) GetDataOk() (*V2ObjectsObjectPatchRequestData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *V2ObjectsObjectPatchRequest) SetData(v V2ObjectsObjectPatchRequestData) {
	o.Data = v
}

func (o V2ObjectsObjectPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsObjectPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *V2ObjectsObjectPatchRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsObjectPatchRequest := _V2ObjectsObjectPatchRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2ObjectsObjectPatchRequest)

	if err != nil {
		return err
	}

	*o = V2ObjectsObjectPatchRequest(varV2ObjectsObjectPatchRequest)

	return err
}

type NullableV2ObjectsObjectPatchRequest struct {
	value *V2ObjectsObjectPatchRequest
	isSet bool
}

func (v NullableV2ObjectsObjectPatchRequest) Get() *V2ObjectsObjectPatchRequest {
	return v.value
}

func (v *NullableV2ObjectsObjectPatchRequest) Set(val *V2ObjectsObjectPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsObjectPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsObjectPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsObjectPatchRequest(val *V2ObjectsObjectPatchRequest) *NullableV2ObjectsObjectPatchRequest {
	return &NullableV2ObjectsObjectPatchRequest{value: val, isSet: true}
}

func (v NullableV2ObjectsObjectPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsObjectPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


