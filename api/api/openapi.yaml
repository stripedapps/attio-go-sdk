openapi: 3.1.0
info:
  contact:
    email: support@attio.com
    name: Attio Support
    url: https://attio.com/help
  title: Attio API
  version: 2.0.0
servers:
- description: Production
  url: https://api.attio.com
security:
- oauth2: []
tags:
- description: "Objects are the core data models inside of Attio. They contain standard\
    \ objects, such as [people](/docs/standard-objects-people), [companies](/docs/standard-objects-companies)\
    \ or [deals](/docs/standard-objects-deals), and custom objects that are specific\
    \ to your use-case. See our [data model guide](/docs/data-model) for more information."
  name: Objects
- description: "Attributes model properties of objects and lists. Some attributes,\
    \ such as the `name` attribute on a person, are system-defined, while others are\
    \ user-defined. Attributes are one of [many types](/docs/attribute-types) such\
    \ as text, location or select. See our [data model guide](/docs/data-model) for\
    \ more information."
  name: Attributes
- description: "Records are individual instances of objects e.g. a specific [person](/docs/standard-objects-people)\
    \ or [company](/docs/standard-objects-companies). See our [data model guide](/docs/data-model)\
    \ for more information."
  name: Records
- description: "Lists are used to model a particular process. A list contains many\
    \ records of a single object type, where each record is represented by an entry.\
    \ Entries contain their own data from attributes defined on the list and also\
    \ data from their parent record. See our [data model guide](/docs/data-model)\
    \ for more information."
  name: Lists
- description: Meta endpoints are used to get information about the API token.
  name: Meta
- description: "Entries are elements in a list that reference a single parent record.\
    \ Entries contain their own data from attributes defined on the list and also\
    \ data from their parent record. See our [data model guide](/docs/data-model)\
    \ for more information."
  name: Entries
- description: Workspace members represent a user with access to a workspace. Workspace
    members are assigned roles that determine what they can do within the workspace.
  name: Workspace members
- description: Notes are rich text documents that reference a single parent record.
  name: Notes
- description: "A task is a defined, actionable item with references to linked records\
    \ and assigned workspace members."
  name: Tasks
- description: "Webhooks allow you to listen for changes to data in Attio, for example\
    \ when a record is updated."
  name: Webhooks
- description: "Threads are groups of [comments](/reference/get_v2-comments-comment-id)\
    \ on either a record or entry."
  name: Threads
- description: "Comments are messages on a [thread](/reference/get_v2-threads)."
  name: Comments
- description: People are one of the core objects inside of Attio. Person records
    can be added to lists and can be created automatically when syncing your mailbox.
  name: People
- description: Companies are one of the core objects inside of Attio. Company records
    can be added to lists and can be created automatically when syncing your mailbox.
  name: Companies
- description: Users are an optional standard object that represents a user of your
    system. Users can belong to many workspaces.
  name: Users
- description: Deals are an optional standard object that represent a deal or opportunity.
  name: Deals
- description: Workspaces are an optional standard object that represent a workspace
    or account in your system. Workspaces have many users and can be used to model
    a multi-tenant system. A company record can optionally have multiple workspaces.
  name: Workspaces
paths:
  /v2/objects:
    get:
      description: |-
        Lists all system-defined and user-defined objects in your workspace.

        Required scopes: `object_configuration:read`.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects_get_200_response'
          description: Success
      security:
      - oauth2:
        - object_configuration:read
      summary: List objects
      tags:
      - Objects
    post:
      description: |-
        Creates a new custom object in your workspace.

        Required scopes: `object_configuration:read-write`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects_post_200_response'
          description: Success
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects_post_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Create an object
      tags:
      - Objects
  /v2/objects/{object}:
    get:
      description: |-
        Gets a single object by its `object_id` or slug.

        Required scopes: `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug to identify the object.
          example: people
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read
      summary: Get an object
      tags:
      - Objects
    patch:
      description: |-
        Updates a single object. The object to be updated is identified by its `object_id`.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug to identify the object.
          example: people
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__patch_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Update an object
      tags:
      - Objects
  /v2/{target}/{identifier}/attributes:
    get:
      description: |-
        Lists all attributes defined on a specific object or list. Attributes are returned in the order that they are sorted by in the UI.

        Required scopes: `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attributes are on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the attributes
            belong to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. See the [full guide\
            \ to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. See the\
            \ [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      - explode: true
        in: query
        name: show_archived
        required: false
        schema:
          description: "Whether archived attributes should be included in the results.\
            \ See the [full guide to archiving here](/docs/archiving-vs-deleting)."
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_get_200_response'
          description: Success
      security:
      - oauth2:
        - object_configuration:read
      summary: List attributes
      tags:
      - Attributes
    post:
      description: |-
        Creates a new attribute on either an object or a list.

        To create an attribute on an object, you must also have the `object_configuration:read-write` scope.

        To create an attribute on a list, you must also have the `list_configuration:read-write` scope.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is to be created on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the attribute
            belongs to.
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_409_response'
          description: Conflict
      security:
      - oauth2: []
      summary: Create an attribute
      tags:
      - Attributes
  /v2/{target}/{identifier}/attributes/{attribute}:
    get:
      description: |-
        Gets information about a single attribute on either an object or a list.

        Required scopes: `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read
      summary: Get an attribute
      tags:
      - Attributes
    patch:
      description: |-
        Updates a single attribute on a given object or list.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Update an attribute
      tags:
      - Attributes
  /v2/{target}/{identifier}/attributes/{attribute}/options:
    get:
      description: |-
        Lists all select options for a particular attribute on either an object or a list.

        Required scopes: `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the select attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute you want to list select
            options on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: true
        in: query
        name: show_archived
        required: false
        schema:
          description: '`true` if you want the results to include archived select
            options.'
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read
      summary: List select options
      tags:
      - Attributes
    post:
      description: |-
        Adds a select option to a select attribute on an object or a list.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the select attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute to create a select
            option on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Create a select option
      tags:
      - Attributes
  /v2/{target}/{identifier}/attributes/{attribute}/options/{option}:
    patch:
      description: |-
        Updates a select option on an attribute on either an object or a list.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list.
          enum:
          - objects
          - lists
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the select attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the select attribute.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: false
        in: path
        name: option
        required: true
        schema:
          description: A UUID or select option title to identify the select option
            you would like to update.
          example: Medium
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options__option__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options__option__patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Update a select option
      tags:
      - Attributes
  /v2/{target}/{identifier}/attributes/{attribute}/statuses:
    get:
      description: |-
        Lists all statuses for a particular status attribute on either an object or a list.

        Required scopes: `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list. Please note
            that the company and people objects do not support status attributes at
            this time.
          enum:
          - lists
          - objects
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the status attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute you want to list statuses
            on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: true
        in: query
        name: show_archived
        required: false
        schema:
          default: false
          description: "`true` if you want the results to include archived statuses.\
            \ See our [archiving guide](/docs/archiving-vs-deleting) for more information\
            \ on archiving."
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read
      summary: List statuses
      tags:
      - Attributes
    post:
      description: |-
        Add a new status to a status attribute on either an object or a list.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list. Please note
            that company and person objects do not support status attributes at this
            time.
          enum:
          - lists
          - objects
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the status attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute the status will belong
            to.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Create a status
      tags:
      - Attributes
  /v2/{target}/{identifier}/attributes/{attribute}/statuses/{status}:
    patch:
      description: |-
        Update a status on an status attribute on either an object or a list.

        Required scopes: `object_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: target
        required: true
        schema:
          description: Whether the attribute is on an object or a list. Please note
            that company and person objects do not support status attributes at this
            time.
          enum:
          - lists
          - objects
          example: lists
          type: string
        style: simple
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          description: A UUID or slug to identify the object or list the status attribute
            belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute to update the status
            on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: false
        in: path
        name: status
        required: true
        schema:
          description: A UUID or status title to identify the status to update.
          example: In Progress
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses__status__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses__status__patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_409_response'
          description: Conflict
      security:
      - oauth2:
        - object_configuration:read-write
      summary: Update a status
      tags:
      - Attributes
  /v2/objects/{object}/records/query:
    post:
      description: |-
        Lists people, company or other records, with the option to filter and sort results.

        Required scopes: `record_permission:read`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug to identify the object to list records for.
          example: people
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__records_query_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_query_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_query_post_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read
        - object_configuration:read
      summary: List records
      tags:
      - Records
  /v2/objects/{object}/records:
    post:
      description: |-
        Creates a new person, company or other record. This endpoint will throw on conflicts of unique attributes. If you would prefer to update records on conflicts, please use the [Assert record endpoint](/reference/put_v2-objects-object-records) instead.

        Required scopes: `record_permission:read-write`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: The UUID or slug identifying the object the created record
            should belong to.
          example: people
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__records_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read-write
        - object_configuration:read
      summary: Create a record
      tags:
      - Records
    put:
      description: |-
        Use this endpoint to create or update people, companies and other records. A matching attribute is used to search for existing records. If a record is found with the same value for the matching attribute, that record will be updated. If no record with the same value for the matching attribute is found, a new record will be created instead. If you would like to avoid matching, please use the [Create record endpoint](/reference/post_v2-objects-object-records).

        If the matching attribute is a multiselect attribute, new values will be added and existing values will not be deleted. For any other multiselect attribute, all values will be either created or deleted as necessary to match the list of supplied values.

        Required scopes: `record_permission:read-write`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug to identify the object the record should belong
            to.
          example: people
          type: string
        style: simple
      - explode: true
        in: query
        name: matching_attribute
        required: true
        schema:
          description: The ID or slug of the attribute to use to check if a record
            already exists. The attribute must be unique.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__records_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read-write
        - object_configuration:read
      summary: Assert a record
      tags:
      - Records
  /v2/objects/{object}/records/{record_id}:
    delete:
      description: |-
        Deletes a single record (e.g. a company or person) by ID.

        Required scopes: `object_configuration:read`, `record_permission:read-write`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: The UUID or slug of the object the record belongs to.
          example: people
          type: string
        style: simple
      - explode: false
        in: path
        name: record_id
        required: true
        schema:
          description: The UUID of the record to delete.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - object_configuration:read
        - record_permission:read-write
      summary: Delete a record
      tags:
      - Records
    get:
      description: |-
        Gets a single person, company or other record by its `record_id`.

        Required scopes: `record_permission:read`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug identifying the object that the record belongs
            to.
          example: people
          type: string
        style: simple
      - explode: false
        in: path
        name: record_id
        required: true
        schema:
          description: A UUID identifying the record.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_put_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read
        - object_configuration:read
      summary: Get a record
      tags:
      - Records
    patch:
      description: |-
        Use this endpoint to update people, companies and other records by `record_id`. If the update payload includes multiselect attributes, the values supplied will be created and prepended to the list of values that already exist (if any). Use the [Assert record endpoint](/reference/put_v2-objects-object-records) to overwrite or remove multiselect attribute values.

        Required scopes: `record_permission:read-write`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug of the object the record belongs to.
          example: people
          type: string
        style: simple
      - explode: false
        in: path
        name: record_id
        required: true
        schema:
          description: A UUID of the record to update.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__records_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__patch_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read-write
        - object_configuration:read
      summary: Update a record
      tags:
      - Records
  /v2/objects/{object}/records/{record_id}/attributes/{attribute}/values:
    get:
      description: |-
        Gets all values for a given attribute on a record. If the attribute is historic, this endpoint has the ability to return all historic values using the `show_historic` query param.

        Required scopes: `record_permission:read`, `object_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug to identify the object the record belongs to.
          example: people
          type: string
        style: simple
      - explode: false
        in: path
        name: record_id
        required: true
        schema:
          description: A UUID to identify the record you want to query values on.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute you want to query
            values on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: true
        in: query
        name: show_historic
        required: false
        schema:
          default: false
          description: "If `true`, the endpoint will return all historic values for\
            \ the attribute. If `false`, the endpoint will only return the currently\
            \ active value(s). Defaults to `false`. Can only be set to `true` for\
            \ attributes which support historic data; the endpoint will throw if set\
            \ to `true` for non-historic attributes."
          example: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. See the [full guide\
            \ to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. See the\
            \ [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__attributes__attribute__values_get_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__attributes__attribute__values_get_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - record_permission:read
        - object_configuration:read
      summary: List record attribute values
      tags:
      - Records
  /v2/objects/{object}/records/{record_id}/entries:
    get:
      description: |-
        List all entries, across all lists, for which this record is the parent.

        Required scopes: `record_permission:read`, `object_configuration:read`, `list_entry:read`.
      parameters:
      - explode: false
        in: path
        name: object
        required: true
        schema:
          description: A UUID or slug identifying the object that the record belongs
            to.
          example: people
          type: string
        style: simple
      - explode: false
        in: path
        name: record_id
        required: true
        schema:
          description: A UUID identifying the record.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. The default is `100`\
            \ and the maximum is `1000`. See the [full guide to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. The default\
            \ is `0`. See the [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__entries_get_200_response'
          description: Success
      security:
      - oauth2:
        - record_permission:read
        - object_configuration:read
        - list_entry:read
      summary: List record entries
      tags:
      - Records
  /v2/lists:
    get:
      description: |-
        List all lists that your access token has access to. lists are returned in the order that they are sorted in the sidebar.

        Required scopes: `list_configuration:read`.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_get_200_response'
          description: Success
      security:
      - oauth2:
        - list_configuration:read
      summary: List all lists
      tags:
      - Lists
    post:
      description: "Creates a new list.\n\nOnce you have your list, add attributes\
        \ to it using the [Create attribute](/reference/post_v2-target-identifier-attributes)\
        \ API, and add records to it using the [Add records to list](/reference/post_v2-lists-list-entries)\
        \ API. \n\nNew lists must specify which records can be added with the `parent_object`\
        \ parameter which accepts either an object slug or an object ID. Permissions\
        \ for the list are controlled with the `workspace_access` and `workspace_member_access`\
        \ parameters.\n\nPlease note that new lists must have either `workspace_access`\
        \ set to `\"full-access\"` or one or more element of `workspace_member_access`\
        \ with a `\"full-access\"` level. It is also possible to receive a `403` billing\
        \ error if your workspace is not on a plan that supports either advanced workspace\
        \ or workspace member-level access for lists.\n\nRequired scopes: `list_configuration:read-write`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_400_response'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_403_response'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_configuration:read-write
      summary: Create a list
      tags:
      - Lists
  /v2/lists/{list}:
    get:
      description: |-
        Gets a single list in your workspace that your access token has access to.

        Required scopes: `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug to identify the list.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_configuration:read
      summary: Get a list
      tags:
      - Lists
    patch:
      description: |-
        Updates an existing list. Permissions for the list are controlled with the `workspace_access` and `workspace_member_access` parameters. Please note that lists must have either `workspace_access` set to `"full-access"` or one or more element of `workspace_member_access` with a `"full-access"` level. It is also possible to receive a `403` billing error if your workspace is not on a plan that supports either advanced workspace or workspace member level access for lists. Changing the parent object of a list is not possible through the API as it can have unintended side-effects that should be considered carefully. If you wish to carry out a parent object change you should do so through the UI.

        Required scopes: `list_configuration:read-write`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug to identify the list to update.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists__list__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_configuration:read-write
      summary: Update a list
      tags:
      - Lists
  /v2/lists/{list}/entries/query:
    post:
      description: |-
        Lists entries in a given list, with the option to filter and sort results.

        Required scopes: `list_entry:read`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug to identify the list to retrieve entries from.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_objects__object__records_query_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_query_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read
        - list_configuration:read
      summary: List entries
      tags:
      - Entries
  /v2/lists/{list}/entries:
    post:
      description: |-
        Adds a record to a list as a new list entry. This endpoint will throw on conflicts of unique attributes. Multiple list entries are allowed for the same parent record

        Required scopes: `list_entry:read-write`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: The UUID or slug identifying the list that the created list
            entry should belong to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists__list__entries_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_post_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read-write
        - list_configuration:read
      summary: Create an entry (add record to list)
      tags:
      - Entries
    put:
      description: |-
        Use this endpoint to create or update a list entry for a given parent record. If an entry with the specified parent record is found, that entry will be updated. If no such entry is found, a new entry will be created instead. If there are multiple entries with the same parent record, this endpoint with return the "MULTIPLE_MATCH_RESULTS" error. When writing to multi-select attributes, all values will be either created or deleted as necessary to match the list of values supplied in the request body.

        Required scopes: `list_entry:read-write`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug of the list the list entry belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists__list__entries_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read-write
        - list_configuration:read
      summary: Assert a list entry by parent
      tags:
      - Entries
  /v2/lists/{list}/entries/{entry_id}:
    delete:
      description: |-
        Deletes a single list entry by its `entry_id`.

        Required scopes: `list_entry:read-write`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug identifying the list the entry is in.
          example: enterprise_sales
          type: string
        style: simple
      - explode: false
        in: path
        name: entry_id
        required: true
        schema:
          description: A UUID identifying the entry to delete.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read-write
        - list_configuration:read
      summary: Delete a list entry
      tags:
      - Entries
    get:
      description: |-
        Gets a single list entry by its `entry_id`.

        Required scopes: `list_entry:read`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug identifying the list the entry is in.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: entry_id
        required: true
        schema:
          description: A UUID identifying the entry.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read
        - list_configuration:read
      summary: Get a list entry
      tags:
      - Entries
    patch:
      description: |-
        Use this endpoint to update list entries by `entry_id`. If the update payload includes multiselect attributes, the values supplied will be created and prepended to the list of values that already exist (if any). Use the `PUT` endpoint to overwrite or remove multiselect attribute values.

        Required scopes: `list_entry:read-write`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug of the list the list entry belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: entry_id
        required: true
        schema:
          description: A UUID of the list entry to update.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists__list__entries__entry_id__put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries__entry_id__put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read-write
        - list_configuration:read
      summary: Update a list entry (append multiselect values)
      tags:
      - Entries
    put:
      description: |-
        Use this endpoint to update list entries by `entry_id`. If the update payload includes multiselect attributes, the values supplied will overwrite/remove the list of values that already exist (if any). Use the `PATCH` endpoint to add multiselect attribute values without removing those value that already exist.

        Required scopes: `list_entry:read-write`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug of the list the list entry belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: simple
      - explode: false
        in: path
        name: entry_id
        required: true
        schema:
          description: A UUID of the list entry to update.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_lists__list__entries__entry_id__put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries_put_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__entries__entry_id__put_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read-write
        - list_configuration:read
      summary: Update a list entry (overwrite multiselect values)
      tags:
      - Entries
  /v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values:
    get:
      description: |-
        Gets all values for a given attribute on a list entry. If the attribute is historic, this endpoint has the ability to return all historic values using the `show_historic` query param.

        Required scopes: `list_entry:read`, `list_configuration:read`.
      parameters:
      - explode: false
        in: path
        name: list
        required: true
        schema:
          description: A UUID or slug identifying the list the entry is in.
          example: enterprise_sales
          type: string
        style: simple
      - explode: false
        in: path
        name: entry_id
        required: true
        schema:
          description: A UUID identifying the entry.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: attribute
        required: true
        schema:
          description: A UUID or slug to identify the attribute you want to query
            values on.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          type: string
        style: simple
      - explode: true
        in: query
        name: show_historic
        required: false
        schema:
          default: false
          description: "If `true`, the endpoint will return all historic values for\
            \ the attribute. If `false`, the endpoint will only return the currently\
            \ active value(s). Defaults to `false`. Can only be set to `true` for\
            \ attributes which support historic data; the endpoint will throw if set\
            \ to `true` for non-historic attributes."
          example: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. See the [full guide\
            \ to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. See the\
            \ [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__attributes__attribute__values_get_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__records__record_id__attributes__attribute__values_get_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_lists__list__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - list_entry:read
        - list_configuration:read
      summary: List attribute values for a list entry
      tags:
      - Entries
  /v2/workspace_members:
    get:
      description: |-
        Lists all workspace members in the workspace.

        Required scopes: `user_management:read`.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_workspace_members_get_200_response'
          description: Success
      security:
      - oauth2:
        - user_management:read
      summary: List workspace members
      tags:
      - Workspace members
  /v2/workspace_members/{workspace_member_id}:
    get:
      description: |-
        Gets a single workspace member by ID.

        Required scopes: `user_management:read`.
      parameters:
      - explode: false
        in: path
        name: workspace_member_id
        required: true
        schema:
          description: A UUID to identify the workspace member.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_workspace_members__workspace_member_id__get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_workspace_members__workspace_member_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - user_management:read
      summary: Get a workspace member
      tags:
      - Workspace members
  /v2/notes:
    get:
      description: |-
        List notes for all records or for a specific record.

        Required scopes: `note:read`, `object_configuration:read`, `record_permission:read`.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. The default is `10`\
            \ and the maximum is `50`. See the [full guide to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. The default\
            \ is `0`. See the [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      - explode: true
        in: query
        name: parent_object
        required: false
        schema:
          description: The slug or ID of the parent object the notes belong to.
          example: people
          type: string
        style: form
      - explode: true
        in: query
        name: parent_record_id
        required: false
        schema:
          description: The ID of the parent record the notes belong to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_notes_get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - note:read
        - object_configuration:read
        - record_permission:read
      summary: List notes
      tags:
      - Notes
    post:
      description: |-
        Creates a new note for a given record.

        At present, notes can only be created from plaintext without formatting.

        Required scopes: `note:read-write`, `object_configuration:read`, `record_permission:read`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_notes_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_notes_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - note:read-write
        - object_configuration:read
        - record_permission:read
      summary: Create a note
      tags:
      - Notes
  /v2/notes/{note_id}:
    delete:
      description: |-
        Delete a single note by ID.

        Required scopes: `note:read-write`.
      parameters:
      - explode: false
        in: path
        name: note_id
        required: true
        schema:
          description: A UUID which identifies the note to delete.
          example: ff3f3bd4-40f4-4f80-8187-cd02385af424
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_notes__note_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - note:read-write
      summary: Delete a note
      tags:
      - Notes
    get:
      description: |-
        Get a single note by ID.

        Required scopes: `note:read`, `object_configuration:read`, `record_permission:read`.
      parameters:
      - explode: false
        in: path
        name: note_id
        required: true
        schema:
          description: A UUID which identifies the note.
          example: ff3f3bd4-40f4-4f80-8187-cd02385af424
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_notes_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_notes__note_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - note:read
        - object_configuration:read
        - record_permission:read
      summary: Get a note
      tags:
      - Notes
  /v2/tasks:
    get:
      description: |-
        List all tasks. Results are sorted by creation date, from oldest to newest.

        Required scopes: `task:read`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. Defaults to 500.\
            \ See the [full guide to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. Defaults\
            \ to 0. See the [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          description: "Optionally sort the results. \"created_at:asc\" returns oldest\
            \ results first, \"created_at:desc\" returns the newest results first.\
            \ If unspecified, defaults to \"created_at:asc\" (oldest results first)."
          enum:
          - created_at:asc
          - created_at:desc
          example: created_at:desc
          type: string
        style: form
      - explode: true
        in: query
        name: linked_object
        required: false
        schema:
          description: "Pass a value to this parameter to filter results to only those\
            \ tasks that contain the specified record in the `linked_records` property\
            \ of the task. This parameter should identify the object that the linked\
            \ record belongs to. For example, if filtering to tasks that link to a\
            \ specific person record, this parameter should be `people`. If provided,\
            \ `linked_record_id` must also be provided."
          example: people
          type: string
        style: form
      - explode: true
        in: query
        name: linked_record_id
        required: false
        schema:
          description: "Pass a value to this parameter to filter results to only those\
            \ tasks that contain the specified record in the `linked_records` property\
            \ of the task. This parameter should contain the record ID of the linked\
            \ record. If provided, `linked_object` must also be provided."
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: assignee
        required: false
        schema:
          description: Filter tasks by workspace member assignees. Workspace members
            can be referenced by either their email address or ID. Pass an empty value
            or the string `null` to find tasks with no assignee.
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: is_completed
        required: false
        schema:
          description: "Filter tasks by whether they have been completed. By default,\
            \ both completed and non-completed tasks are returned. Specify `true`\
            \ to only return completed tasks, or `false` to only return non-completed\
            \ tasks."
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_get_200_response'
          description: Success
      security:
      - oauth2:
        - task:read
        - object_configuration:read
        - record_permission:read
        - user_management:read
      summary: List tasks
      tags:
      - Tasks
    post:
      description: |-
        Creates a new task.

        At present, tasks can only be created from plaintext without record reference formatting.

        Required scopes: `task:read-write`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_tasks_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_objects__object__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - task:read-write
        - object_configuration:read
        - record_permission:read
        - user_management:read
      summary: Create a task
      tags:
      - Tasks
  /v2/tasks/{task_id}:
    delete:
      description: |-
        Delete a task by ID.

        Required scopes: `task:read-write`.
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to delete.
          example: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks__task_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - task:read-write
      summary: Delete a task
      tags:
      - Tasks
    get:
      description: |-
        Get a single task by ID.

        Required scopes: `task:read`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task.
          example: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks__task_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - task:read
        - object_configuration:read
        - record_permission:read
        - user_management:read
      summary: Get a task
      tags:
      - Tasks
    patch:
      description: |-
        Updates an existing task by `task_id`. At present, only the `deadline_at`, `is_completed`, `linked_records`, and `assignees` fields can be updated.

        Required scopes: `task:read-write`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to update.
          example: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_tasks__task_id__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks_post_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_tasks__task_id__patch_404_response'
          description: Not Found
      security:
      - oauth2:
        - task:read-write
        - object_configuration:read
        - record_permission:read
        - user_management:read
      summary: Update a task
      tags:
      - Tasks
  /v2/threads:
    get:
      description: |-
        List threads of comments on a record or list entry.

        To view threads on records, you will need the `object_configuration:read` and `record_permission:read` scopes.

        To view threads on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.

        Required scopes: `comment:read`.
      parameters:
      - explode: true
        in: query
        name: record_id
        required: false
        schema:
          description: Use this parameter to filter to threads on a specific record.
            Must be passed with `object`.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: object
        required: false
        schema:
          description: Use this parameter to filter to threads on a specific record.
            Must be passed with `record_id`. Accepts either a slug or an ID.
          example: people
          type: string
        style: form
      - explode: true
        in: query
        name: entry_id
        required: false
        schema:
          description: Use this parameter to filter to threads on a specific entry.
            Must be passed with `list`.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: list
        required: false
        schema:
          description: Use this parameter to filter to threads on a specific entry.
            Must be passed with `entry_id`. Accepts either a slug or an ID.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return. The default is `10`\
            \ and the maximum is `50`. See the [full guide to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning. The default\
            \ is `0`. See the [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_threads_get_200_response'
          description: Success
      security:
      - oauth2:
        - comment:read
      summary: List threads
      tags:
      - Threads
  /v2/threads/{thread_id}:
    get:
      description: |-
        Get all comments in a thread.

        To view threads on records, you will need the `object_configuration:read` and `record_permission:read` scopes.

        To view threads on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.

        Required scopes: `comment:read`.
      parameters:
      - explode: false
        in: path
        name: thread_id
        required: true
        schema:
          description: A UUID which identifies the thread.
          example: a649e4d9-435c-43fb-83ba-847b4876f27a
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_threads__thread_id__get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_threads__thread_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - comment:read
      summary: Get a thread
      tags:
      - Threads
  /v2/comments:
    post:
      description: |-
        Creates a new comment related to an existing thread, record or entry.

        To create comments on records, you will need the `object_configuration:read` and `record_permission:read` scopes.

        To create comments on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.

        Required scopes: `comment:read-write`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_comments_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_comments_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_comments_post_400_response'
          description: Bad Request
      security:
      - oauth2:
        - comment:read-write
      summary: Create a comment
      tags:
      - Comments
  /v2/comments/{comment_id}:
    delete:
      description: |-
        Deletes a comment by ID. If deleting a comment at the head of a thread, all messages in the thread are also deleted.

        Required scopes: `comment:read-write`.
      parameters:
      - explode: false
        in: path
        name: comment_id
        required: true
        schema:
          description: The ID of the comment to delete.
          example: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_comments__comment_id__delete_404_response'
          description: Not Found
      security:
      - oauth2:
        - comment:read-write
      summary: Delete a comment
      tags:
      - Comments
    get:
      description: |-
        Get a single comment by ID.

        To view comments on records, you will need the `object_configuration:read` and `record_permission:read` scopes.

        To view comments on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.

        Required scopes: `comment:read`.
      parameters:
      - explode: false
        in: path
        name: comment_id
        required: true
        schema:
          description: A UUID which identifies the comment.
          example: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_comments_post_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_comments__comment_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - comment:read
      summary: Get a comment
      tags:
      - Comments
  /v2/webhooks:
    get:
      description: |-
        Get all of the webhooks in your workspace.

        Required scopes: `webhook:read`.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The maximum number of results to return, between 10 and 100,\
            \ defaults to 10. See the [full guide to pagination here](/docs/pagination)."
          example: 10
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: "The number of results to skip over before returning, defaults\
            \ to 0. See the [full guide to pagination here](/docs/pagination)."
          example: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks_get_200_response'
          description: Success
      security:
      - oauth2:
        - webhook:read
      summary: List webhooks
      tags:
      - Webhooks
    post:
      description: |-
        Create a webhook and associated subscriptions.

        Required scopes: `webhook:read-write`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_webhooks_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks_post_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks_post_400_response'
          description: Bad Request
      security:
      - oauth2:
        - webhook:read-write
      summary: Create a webhook
      tags:
      - Webhooks
  /v2/webhooks/{webhook_id}:
    delete:
      description: |-
        Delete a webhook by ID.

        Required scopes: `webhook:read-write`.
      parameters:
      - explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          description: A UUID identifying the webhook to delete.
          example: 23e42eaf-323a-41da-b5bb-fd67eebda553
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Success
                properties: {}
                type: object
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks__webhook_id__delete_404_response'
          description: Not Found
      security:
      - oauth2:
        - webhook:read-write
      summary: Delete a webhook
      tags:
      - Webhooks
    get:
      description: |-
        Get a single webhook.

        Required scopes: `webhook:read`.
      parameters:
      - explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          description: A UUID which identifies the webhook.
          example: 23e42eaf-323a-41da-b5bb-fd67eebda553
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks__webhook_id__get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks__webhook_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - webhook:read
      summary: Get a webhook
      tags:
      - Webhooks
    patch:
      description: |-
        Update a webhook and associated subscriptions.

        Required scopes: `webhook:read-write`.
      parameters:
      - explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          description: A UUID which identifies the webhook.
          example: 23e42eaf-323a-41da-b5bb-fd67eebda553
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_v2_webhooks__webhook_id__patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks__webhook_id__get_200_response'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_webhooks__webhook_id__get_404_response'
          description: Not Found
      security:
      - oauth2:
        - webhook:read-write
      summary: Update a webhook
      tags:
      - Webhooks
  /v2/self:
    get:
      description: "Identify the current access token, the workspace it is linked\
        \ to, and any permissions it has."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_v2_self_get_200_response'
          description: Success
      summary: Identify
      tags:
      - Meta
components:
  parameters: {}
  schemas:
    status:
      example:
        target_time_in_status: P0Y0M1DT0H0M0S
        is_archived: false
        celebration_enabled: false
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          status_id: 11f07f01-c10f-4e05-a522-33e050bc52ee
          attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        title: In Progress
      properties:
        id:
          $ref: '#/components/schemas/status_id'
        title:
          description: The title of the status
          example: In Progress
          type: string
        is_archived:
          description: "Whether or not to archive the status. See our [archiving guide](/docs/archiving-vs-deleting)\
            \ for more information on archiving."
          example: false
          type: boolean
        celebration_enabled:
          description: Whether arriving at this status triggers a celebration effect
            in the UI
          example: false
          type: boolean
        target_time_in_status:
          description: Target time for a record to spend in given status expressed
            as a ISO-8601 duration string
          example: P0Y0M1DT0H0M0S
          nullable: true
          type: string
      required:
      - celebration_enabled
      - id
      - is_archived
      - target_time_in_status
      - title
    select-option:
      example:
        is_archived: false
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          option_id: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        title: Medium
      properties:
        id:
          $ref: '#/components/schemas/select_option_id'
        title:
          description: The title of the select option
          example: Medium
          type: string
        is_archived:
          description: "Whether or not to archive the select option. See our [archiving\
            \ guide](/docs/archiving-vs-deleting) for more information on archiving."
          example: false
          type: boolean
      required:
      - id
      - is_archived
      - title
    input-value:
      anyOf:
      - $ref: '#/components/schemas/input_value_anyOf'
      - $ref: '#/components/schemas/input_value_anyOf_1'
      - $ref: '#/components/schemas/input_value_anyOf_2'
      - $ref: '#/components/schemas/input_value_anyOf_3'
      - $ref: '#/components/schemas/input_value_anyOf_4'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_1'
      - $ref: '#/components/schemas/input_value_anyOf_5'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1'
      - $ref: '#/components/schemas/input_value_anyOf_6'
      - $ref: '#/components/schemas/input_value_anyOf_7'
      - $ref: '#/components/schemas/input_value_anyOf_8'
      - $ref: '#/components/schemas/input_value_anyOf_9'
      - $ref: '#/components/schemas/input_value_anyOf_10'
      - $ref: '#/components/schemas/input_value_anyOf_11'
      - $ref: '#/components/schemas/input_value_anyOf_12'
      - $ref: '#/components/schemas/input_value_anyOf_13'
      - $ref: '#/components/schemas/input_value_anyOf_14'
      - $ref: '#/components/schemas/input_value_anyOf_15'
      description: "A union of possible value types, as required in request bodies."
    output-value:
      anyOf:
      - $ref: '#/components/schemas/output_value_anyOf'
      - $ref: '#/components/schemas/output_value_anyOf_1'
      - $ref: '#/components/schemas/output_value_anyOf_2'
      - $ref: '#/components/schemas/output_value_anyOf_3'
      - $ref: '#/components/schemas/output_value_anyOf_4'
      - $ref: '#/components/schemas/output_value_anyOf_5'
      - $ref: '#/components/schemas/output_value_anyOf_6'
      - $ref: '#/components/schemas/output_value_anyOf_7'
      - $ref: '#/components/schemas/output_value_anyOf_8'
      - $ref: '#/components/schemas/output_value_anyOf_9'
      - $ref: '#/components/schemas/output_value_anyOf_10'
      - $ref: '#/components/schemas/output_value_anyOf_11'
      - $ref: '#/components/schemas/output_value_anyOf_12'
      - $ref: '#/components/schemas/output_value_anyOf_13'
      - $ref: '#/components/schemas/output_value_anyOf_14'
      - $ref: '#/components/schemas/output_value_anyOf_15'
      - $ref: '#/components/schemas/output_value_anyOf_16'
      - $ref: '#/components/schemas/output_value_anyOf_17'
      - $ref: '#/components/schemas/output_value_anyOf_18'
      description: "A union of possible value types, as returned in response bodies."
    attribute:
      example:
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
        title: Rating
        description: Rating of the record out of 5
        api_slug: Rating
        type: rating
        is_system_attribute: false
        is_writable: true
        is_required: false
        is_unique: false
        is_multiselect: false
        is_default_value_enabled: false
        is_archived: false
        default_value: null
        relationship: null
        created_at: 2021-11-21T13:22:49.061Z
        config:
          currency:
            default_currency_code: null
            display_type: null
          record_reference:
            allowed_object_ids: null
      properties:
        id:
          $ref: '#/components/schemas/attribute_id'
        title:
          description: "A title for the attribute, to be displayed across the app."
          example: Rating
          type: string
        description:
          description: A text description of the attribute.
          example: A rating attribute
          nullable: true
          type: string
        api_slug:
          description: A unique slug for the attribute for use in API responses and
            URLs. Formatted in snake case.
          example: my-rating
          type: string
        type:
          description: The type of the attribute.
          enum:
          - text
          - number
          - checkbox
          - currency
          - date
          - timestamp
          - rating
          - status
          - select
          - record-reference
          - actor-reference
          - location
          - domain
          - email-address
          - phone-number
          - interaction
          - personal-name
          example: text
          type: string
        is_system_attribute:
          description: "`true` if this is an Attio system-defined attribute, `false`\
            \ if defined by a user or non-Attio system."
          example: true
          type: boolean
        is_writable:
          description: "Whether or not this attribute can be written to. Can only\
            \ be false when `is_system_attribute` is `true` (user-defined attributes\
            \ are always writeable). If `false`, this usually means the attribute\
            \ is enriched by Attio."
          example: true
          type: boolean
        is_required:
          description: "When `is_required` is `true`, new records/entries must have\
            \ a value for this attribute. If `false`, values may be `null`. This value\
            \ does not affect existing data and you do not need to backfill `null`\
            \ values if changing `is_required` from `false` to `true`."
          example: true
          type: boolean
        is_unique:
          description: Whether or not new values for this attribute must be unique.
            Uniqueness restrictions are only applied to new data and do not apply
            retroactively to previously created data.
          example: true
          type: boolean
        is_multiselect:
          description: Whether or not this attribute can have multiple values. Multiselect
            is only available on some value types.
          example: true
          type: boolean
        is_default_value_enabled:
          description: Whether this attribute has a default value enabled. Must be
            `true` when `is_required` is `true`.
          example: true
          type: boolean
        is_archived:
          description: "Whether this attribute has been archived. Archived attributes\
            \ are hidden from most UI, but can be restored either over the API or\
            \ in workspace settings. See the [guide on archiving and deleting](/docs/archiving-vs-deleting)for\
            \ more information."
          example: false
          type: boolean
        default_value:
          $ref: '#/components/schemas/attribute_default_value'
        relationship:
          $ref: '#/components/schemas/attribute_relationship'
        created_at:
          description: When this attribute was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
        config:
          $ref: '#/components/schemas/attribute_config'
      required:
      - api_slug
      - config
      - created_at
      - default_value
      - description
      - id
      - is_archived
      - is_default_value_enabled
      - is_multiselect
      - is_required
      - is_system_attribute
      - is_unique
      - is_writable
      - relationship
      - title
      - type
    list:
      example:
        parent_object:
        - people
        workspace_access: read-and-write
        workspace_member_access:
        - level: read-and-write
          workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        - level: read-and-write
          workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        name: Hiring Engineering
        api_slug: hiring-engineering
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
        created_by_actor:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          $ref: '#/components/schemas/list_id'
        api_slug:
          description: A human-readable slug for use in URLs and responses.
          example: hiring-engineering
          type: string
        name:
          description: "The name of the list, as viewed in the UI."
          example: Hiring Engineering
          type: string
        parent_object:
          description: "A UUID or slug to identify the allowed object type for records\
            \ added to this list. All new Lists are expected to have exactly one parent\
            \ object. However, some legacy lists may have multiple allowed parents\
            \ so the return type of this field is an array."
          example:
          - people
          items:
            type: string
          type: array
        workspace_access:
          description: The level of access granted to all members of the workspace
            for this list. `null` values represent a private list that only grants
            access to specific workspace members via the `workspace_member_access`
            property.
          enum:
          - full-access
          - read-and-write
          - read-only
          example: read-and-write
          nullable: true
          type: string
        workspace_member_access:
          description: The level of access granted to specific workspace members for
            this list. An empty array represents a list that has granted access to
            no workspace members.
          items:
            $ref: '#/components/schemas/_v2_lists_post_request_data_workspace_member_access_inner'
          type: array
        created_by_actor:
          $ref: '#/components/schemas/list_created_by_actor'
        created_at:
          description: When the list was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
      required:
      - api_slug
      - created_at
      - created_by_actor
      - id
      - name
      - parent_object
      - workspace_access
      - workspace_member_access
    object:
      example:
        singular_noun: Person
        api_slug: people
        plural_noun: People
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        id:
          $ref: '#/components/schemas/object_id'
        api_slug:
          description: "A unique, human-readable slug to access the object through\
            \ URLs and API calls. Formatted in snake case."
          example: people
          nullable: true
          type: string
        singular_noun:
          description: The singular form of the object's name.
          example: Person
          nullable: true
          type: string
        plural_noun:
          description: The plural form of the object's name.
          example: People
          nullable: true
          type: string
        created_at:
          description: When the object was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
      required:
      - api_slug
      - created_at
      - id
      - plural_noun
      - singular_noun
    workspace-member:
      example:
        access_level: member
        email_address: susan.kare@apple.com
        avatar_url: https://lh3.googleusercontent.com/a/ABdFTp7z6OgAW9EqZx78wTqPfWClGCJCZXFjQfBG7rd9=s96-c
        last_name: Kare
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        first_name: Susan
      properties:
        id:
          $ref: '#/components/schemas/workspace_member_id'
        first_name:
          description: The first name of the user.
          example: Susan
          type: string
        last_name:
          description: The last name of the user.
          example: Kare
          type: string
        avatar_url:
          description: A URL to the user's avatar image.
          example: https://lh3.googleusercontent.com/a/ABdFTp7z6OgAW9EqZx78wTqPfWClGCJCZXFjQfBG7rd9=s96-c
          format: uri
          nullable: true
          type: string
        email_address:
          description: The user's email address.
          example: susan.kare@apple.com
          format: email
          type: string
        created_at:
          description: When the workspace member was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
        access_level:
          description: Whether the workspace member is suspended or not and what level
            of privileges they have inside the workspace. We do not delete workspace
            members so that you can successfully attribute past actions to suspended
            workspace members.
          enum:
          - admin
          - member
          - suspended
          example: member
          type: string
      required:
      - access_level
      - avatar_url
      - created_at
      - email_address
      - first_name
      - id
      - last_name
    comment:
      example:
        entry:
          list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
        thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
        resolved_by:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        resolved_at: 2023-01-01T15:00:00.000000000Z
        author:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        record:
          record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        created_at: 2023-01-01T15:00:00.000000000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
        content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
      properties:
        id:
          $ref: '#/components/schemas/comment_id'
        thread_id:
          description: The ID of the thread the comment belongs to.
          example: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          format: uuid
          type: string
        content_plaintext:
          description: "A plaintext representation of the content of the comment.\
            \ References to workspace members are cast into email addresses, all other\
            \ stylistic elements are removed."
          example: "Let's go ahead and close this deal, alice@attio.com."
          type: string
        entry:
          $ref: '#/components/schemas/comment_entry'
        record:
          $ref: '#/components/schemas/comment_record'
        resolved_at:
          description: Whether the comment is resolved.
          example: 2023-01-01T15:00:00.000000000Z
          nullable: true
          type: string
        resolved_by:
          $ref: '#/components/schemas/comment_resolved_by'
        created_at:
          description: When the note was created.
          example: 2023-01-01T15:00:00.000000000Z
          type: string
        author:
          $ref: '#/components/schemas/comment_author'
      required:
      - author
      - content_plaintext
      - created_at
      - entry
      - id
      - record
      - resolved_at
      - resolved_by
      - thread_id
    note:
      example:
        parent_object: people
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          note_id: ff3f3bd4-40f4-4f80-8187-cd02385af424
        title: Initial Prospecting Call Summary
        parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
        content_plaintext: |-
          Introduction
          Date and time of the call
          Participants
          Purpose of the call
          Customer Background
          Company overview (industry, size, location)
          Key business challenges
          Current software solutions (if any) and pain points
        created_by_actor:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          $ref: '#/components/schemas/note_id'
        parent_object:
          description: The slug or ID of the parent object the note belongs to.
          example: people
          type: string
        parent_record_id:
          description: The ID of the parent record the note belongs to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        title:
          description: The note title. The title is plaintext only and has no formatting.
          example: Initial Prospecting Call Summary
          type: string
        content_plaintext:
          description: The plaintext representation of the note content. The line
            feed character `\n` represents new lines within the note content.
          example: |-
            Introduction
            Date and time of the call
            Participants
            Purpose of the call
            Customer Background
            Company overview (industry, size, location)
            Key business challenges
            Current software solutions (if any) and pain points
          type: string
        created_by_actor:
          $ref: '#/components/schemas/note_created_by_actor'
        created_at:
          description: When the note was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
      required:
      - content_plaintext
      - created_at
      - created_by_actor
      - id
      - parent_object
      - parent_record_id
      - title
    task:
      example:
        deadline_at: 2023-01-01
        assignees:
        - referenced_actor_type: workspace-member
          referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        - referenced_actor_type: workspace-member
          referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        created_at: 2022-11-21T13:22:49.061281000Z
        linked_records:
        - target_object_id: people
          target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
        - target_object_id: people
          target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          task_id: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
        content_plaintext: Follow up on current software solutions
        is_completed: false
        created_by_actor:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          $ref: '#/components/schemas/task_id'
        content_plaintext:
          description: The plaintext representation of the task content. Inline linked
            records will appear as "@record name" and are returned in the `linked_records`
            property.
          example: Follow up on current software solutions
          type: string
        deadline_at:
          description: The deadline date of the task. Returned as an ISO 8601 timestamp.
          example: 2023-01-01
          nullable: true
          type: string
        is_completed:
          description: Whether the task has been completed.
          example: false
          type: boolean
        linked_records:
          description: Records linked to the task. Creating record links within task
            content text is not possible via the API at present.
          items:
            $ref: '#/components/schemas/task_linked_records_inner'
          type: array
        assignees:
          description: Workspace members assigned to this task.
          items:
            $ref: '#/components/schemas/task_assignees_inner'
          type: array
        created_by_actor:
          $ref: '#/components/schemas/task_created_by_actor'
        created_at:
          description: When the task was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
      required:
      - assignees
      - content_plaintext
      - created_at
      - created_by_actor
      - deadline_at
      - id
      - is_completed
      - linked_records
    thread:
      example:
        comments:
        - entry:
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          resolved_by:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          resolved_at: 2023-01-01T15:00:00.000000000Z
          author:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          record:
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
        - entry:
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          resolved_by:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          resolved_at: 2023-01-01T15:00:00.000000000Z
          author:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          record:
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
        created_at: 2023-01-01T15:00:00.000000000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          thread_id: a649e4d9-435c-43fb-83ba-847b4876f27a
      properties:
        id:
          $ref: '#/components/schemas/thread_id'
        comments:
          description: "An array of comments in the thread, sorted by `created_at`."
          items:
            $ref: '#/components/schemas/comment'
          minItems: 1
          type: array
        created_at:
          description: When the thread was created.
          example: 2023-01-01T15:00:00.000000000Z
          type: string
      required:
      - comments
      - created_at
      - id
    _v2_objects_get_200_response:
      description: Success
      example:
        data:
        - singular_noun: Person
          api_slug: people
          plural_noun: People
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        - singular_noun: Person
          api_slug: people
          plural_noun: People
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        data:
          items:
            $ref: '#/components/schemas/object'
          type: array
      required:
      - data
    _v2_objects_post_request_data:
      properties:
        api_slug:
          description: "A unique, human-readable slug to access the object through\
            \ URLs and API calls. Should be formatted in snake case."
          example: people
          type: string
        singular_noun:
          description: The singular form of the object's name.
          example: Person
          minLength: 1
          type: string
        plural_noun:
          description: The plural form of the object's name.
          example: People
          minLength: 1
          type: string
      required:
      - api_slug
      - plural_noun
      - singular_noun
    _v2_objects_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_objects_post_request_data'
      required:
      - data
    _v2_objects_post_200_response:
      description: Success
      example:
        data:
          singular_noun: Person
          api_slug: people
          plural_noun: People
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        data:
          $ref: '#/components/schemas/object'
      required:
      - data
    _v2_objects_post_409_response:
      description: Conflict
      example:
        status_code: 0.8008281904610115
        code: slug_conflict
        type: invalid_request_error
        message: Failed to create object. Please ensure your api_slug and names are
          unique.
      properties:
        status_code:
          enum:
          - 409
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - slug_conflict
          type: string
        message:
          example: Failed to create object. Please ensure your api_slug and names
            are unique.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Object with slug/ID "people" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Object with slug/ID "people" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__patch_request_data:
      properties:
        api_slug:
          description: "A unique, human-readable slug to access the object through\
            \ URLs and API calls. Should be formatted in snake case."
          example: people
          type: string
        singular_noun:
          description: The singular form of the object's name.
          example: Person
          minLength: 1
          type: string
        plural_noun:
          description: The plural form of the object's name.
          example: People
          minLength: 1
          type: string
    _v2_objects__object__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_objects__object__patch_request_data'
      required:
      - data
    _v2_objects__object__patch_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: You passed an empty payload. Please ensure you are updating at least
          one property in your request.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: You passed an empty payload. Please ensure you are updating at
            least one property in your request.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__patch_409_response:
      description: Conflict
      example:
        status_code: 6.027456183070403
        code: slug_conflict
        type: invalid_request_error
        message: Failed to update object. Please ensure api_slug is unique.
      properties:
        status_code:
          enum:
          - 409
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - slug_conflict
          type: string
        message:
          example: Failed to update object. Please ensure api_slug is unique.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes_get_200_response:
      description: Success
      example:
        data:
        - id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          title: Rating
          description: Rating of the record out of 5
          api_slug: Rating
          type: rating
          is_system_attribute: false
          is_writable: true
          is_required: false
          is_unique: false
          is_multiselect: false
          is_default_value_enabled: false
          is_archived: false
          default_value: null
          relationship: null
          created_at: 2021-11-21T13:22:49.061Z
          config:
            currency:
              default_currency_code: null
              display_type: null
            record_reference:
              allowed_object_ids: null
        - id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          title: Rating
          description: Rating of the record out of 5
          api_slug: Rating
          type: rating
          is_system_attribute: false
          is_writable: true
          is_required: false
          is_unique: false
          is_multiselect: false
          is_default_value_enabled: false
          is_archived: false
          default_value: null
          relationship: null
          created_at: 2021-11-21T13:22:49.061Z
          config:
            currency:
              default_currency_code: null
              display_type: null
            record_reference:
              allowed_object_ids: null
      properties:
        data:
          items:
            $ref: '#/components/schemas/attribute'
          type: array
      required:
      - data
    _v2__target___identifier__attributes_post_request_data_default_value_oneOf_template:
      anyOf:
      - description: "For actor reference attributes, you may pass a dynamic value\
          \ of `\"current-user\"`. When creating new records or entries, this will\
          \ cause the actor reference value to be populated with either the workspace\
          \ member or API token that created the record/entry."
        enum:
        - current-user
        example: current-user
      - description: "Timestamp attributes may use an ISO 8601 duration as a dynamic\
          \ value. For example, `\"P1M\"` would set the value to the current time\
          \ plus one month."
        example: P1M
      - description: "Date attributes may use an ISO 8601 duration as a dynamic value.\
          \ For example, `\"P1M\"` would set the value to the current time plus one\
          \ month."
        example: P1M
    _v2__target___identifier__attributes_post_request_data_default_value_oneOf:
      properties:
        type:
          enum:
          - dynamic
          example: dynamic
        template:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value_oneOf_template'
      required:
      - template
      - type
    _v2__target___identifier__attributes_post_request_data_default_value_oneOf_1:
      properties:
        type:
          enum:
          - static
          example: static
        template:
          example:
          - value: 5
          items:
            $ref: '#/components/schemas/input-value'
      required:
      - template
      - type
    _v2__target___identifier__attributes_post_request_data_default_value:
      description: "The default value for this attribute. Static values are used to\
        \ directly populate values using their contents. Dynamic values are used to\
        \ lookup data at the point of creation. For example, you could use a dynamic\
        \ value to insert a value for the currently logged in user. Which default\
        \ values are available is dependent on the type of the attribute. Default\
        \ values are not currently supported on people or company objects."
      example:
        type: static
        template:
        - value: 5
      oneOf:
      - $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value_oneOf'
      - $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value_oneOf_1'
      - nullable: true
    _v2__target___identifier__attributes_post_request_data_config_currency:
      description: Configuration available for attributes of type "currency".
      properties:
        default_currency_code:
          description: The ISO4217 code representing the currency that values for
            this attribute should be stored in.
          enum:
          - AUD
          - BRL
          - BEL
          - CAD
          - CNY
          - DKK
          - EUR
          - HKD
          - ISK
          - INR
          - ILS
          - JPY
          - KRW
          - MYR
          - NTD
          - NZD
          - NOK
          - PHP
          - PLN
          - GBP
          - SGD
          - ZAR
          - SEK
          - CHF
          - AED
          - USD
          example: USD
        display_type:
          description: "How the currency should be displayed across the app. \"code\"\
            \ will display the ISO currency code e.g. \"USD\", \"name\" will display\
            \ the localized currency name e.g. \"British pound\", \"narrowSymbol\"\
            \ will display \"$1\" instead of \"US$1\" and \"symbol\" will display\
            \ a localized currency symbol such as \"$\"."
          enum:
          - code
          - name
          - narrowSymbol
          - symbol
          example: symbol
      required:
      - default_currency_code
      - display_type
    _v2__target___identifier__attributes_post_request_data_config_record_reference:
      description: Configuration available for attributes of type "record-reference".
      properties:
        allowed_objects:
          description: A list of slugs or UUIDs to indicate which objects records
            are allowed to belong to. Leave empty to to allow records from all object
            types.
          items:
            example: people
          minItems: 1
      required:
      - allowed_objects
    _v2__target___identifier__attributes_post_request_data_config:
      properties:
        currency:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_config_currency'
        record_reference:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_config_record_reference'
    _v2__target___identifier__attributes_post_request_data:
      additionalProperties: {}
      properties:
        title:
          description: The name of the attribute. The title will be visible across
            Attio's UI.
          example: Your Attribute
        description:
          description: A text description for the attribute.
          example: Lorem ipsum
        api_slug:
          description: "A unique, human-readable slug to access the attribute through\
            \ URLs and API calls. Formatted in snake case."
          example: my-attribute
        type:
          description: The type of the attribute. This value affects the possible
            `config` values. Attributes of type "status" are not supported on objects.
          enum:
          - text
          - number
          - checkbox
          - currency
          - date
          - timestamp
          - rating
          - status
          - select
          - record-reference
          - actor-reference
          - location
          - domain
          - email-address
          - phone-number
          example: text
        is_required:
          description: "When `is_required` is `true`, new records/entries must have\
            \ a value for this attribute. If `false`, values may be `null`. This value\
            \ does not affect existing data and you do not need to backfill `null`\
            \ values if changing `is_required` from `false` to `true`."
          example: true
        is_unique:
          description: Whether or not new values for this attribute must be unique.
            Uniqueness restrictions are only applied to new data and do not apply
            retroactively to previously created data.
          example: true
        is_multiselect:
          description: Whether or not this attribute can have multiple values. Multiselect
            is only available on some value types.
          example: true
        default_value:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value'
        config:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_config'
      required:
      - api_slug
      - config
      - description
      - is_multiselect
      - is_required
      - is_unique
      - title
      - type
    _v2__target___identifier__attributes_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data'
      required:
      - data
    _v2__target___identifier__attributes_post_200_response:
      description: Success
      example:
        data:
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          title: Rating
          description: Rating of the record out of 5
          api_slug: Rating
          type: rating
          is_system_attribute: false
          is_writable: true
          is_required: false
          is_unique: false
          is_multiselect: false
          is_default_value_enabled: false
          is_archived: false
          default_value: null
          relationship: null
          created_at: 2021-11-21T13:22:49.061Z
          config:
            currency:
              default_currency_code: null
              display_type: null
            record_reference:
              allowed_object_ids: null
      properties:
        data:
          $ref: '#/components/schemas/attribute'
      required:
      - data
    _v2__target___identifier__attributes_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: Could not find an object with slug "people" for default value.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: Could not find an object with slug "people" for default value.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes_post_404_response:
      description: Not Found
      example:
        status_code: 6.027456183070403
        code: not_found
        type: invalid_request_error
        message: List with slug/ID "33ebdbe9-e529-47c9-b894-0ba25e9c15c0" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: List with slug/ID "33ebdbe9-e529-47c9-b894-0ba25e9c15c0" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes_post_409_response:
      description: Conflict
      example:
        status_code: 1.4658129805029452
        code: slug_conflict
        type: invalid_request_error
        message: An attribute with the same API slug already exists on this list.
          Please choose a different API slug.
      properties:
        status_code:
          enum:
          - 409
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - slug_conflict
          type: string
        message:
          example: An attribute with the same API slug already exists on this list.
            Please choose a different API slug.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Attribute with slug/ID "my-attribute" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Attribute with slug/ID "my-attribute" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__patch_request_data_default_value:
      description: "The default value for this attribute. Static values are used to\
        \ directly populate values using their contents. Dynamic values are used to\
        \ lookup data at the point of creation. For example, you could use a dynamic\
        \ value to insert a value for the currently logged in user. Which default\
        \ values are available is dependent on the type of the attribute. Default\
        \ values are not currently supported on people or company objects."
      example:
        type: static
        template:
        - value: 5
      oneOf:
      - $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value_oneOf'
      - $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_default_value_oneOf_1'
      - {}
    _v2__target___identifier__attributes__attribute__patch_request_data_config:
      description: "Additional, type-dependent configuration for the attribute."
      properties:
        currency:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_config_currency'
        record_reference:
          $ref: '#/components/schemas/_v2__target___identifier__attributes_post_request_data_config_record_reference'
    _v2__target___identifier__attributes__attribute__patch_request_data:
      additionalProperties: {}
      properties:
        title:
          description: The name of the attribute. The title will be visible across
            Attio's UI.
          example: Your Attribute
        description:
          description: A text description for the attribute.
          example: Lorem ipsum
        api_slug:
          description: "A unique, human-readable slug to access the attribute through\
            \ URLs and API calls. Formatted in snake case."
          example: my-attribute
        is_required:
          description: "When `is_required` is `true`, new records/entries must have\
            \ a value for this attribute. If `false`, values may be `null`. This value\
            \ does not affect existing data and you do not need to backfill `null`\
            \ values if changing `is_required` from `false` to `true`."
          example: true
        is_unique:
          description: Whether or not new values for this attribute must be unique.
            Uniqueness restrictions are only applied to new data and do not apply
            retroactively to previously created data.
          example: true
        default_value:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__patch_request_data_default_value'
        config:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__patch_request_data_config'
        is_archived:
          description: "Whether the attribute has been archived or not. See our [archiving\
            \ guide](/docs/archiving-vs-deleting) for more information on archiving."
          example: false
    _v2__target___identifier__attributes__attribute__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__patch_request_data'
      required:
      - data
    _v2__target___identifier__attributes__attribute__patch_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: system_edit_unauthorized
        type: invalid_request_error
        message: Cannot update a System attribute.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - system_edit_unauthorized
          type: string
        message:
          example: Cannot update a System attribute.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__options_get_200_response:
      description: Success
      example:
        data:
        - is_archived: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            option_id: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: Medium
        - is_archived: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            option_id: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: Medium
      properties:
        data:
          items:
            $ref: '#/components/schemas/select-option'
          type: array
      required:
      - data
    _v2__target___identifier__attributes__attribute__options_post_request_data:
      properties:
        title:
          description: The Title of the select option
          example: Medium
          minLength: 1
          type: string
      required:
      - title
    _v2__target___identifier__attributes__attribute__options_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options_post_request_data'
      required:
      - data
    _v2__target___identifier__attributes__attribute__options_post_200_response:
      description: Success
      example:
        data:
          is_archived: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            option_id: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: Medium
      properties:
        data:
          $ref: '#/components/schemas/select-option'
      required:
      - data
    _v2__target___identifier__attributes__attribute__options_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: This attribute is not a select attribute.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: This attribute is not a select attribute.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__options_post_409_response:
      description: Conflict
      example:
        status_code: 6.027456183070403
        code: slug_conflict
        type: invalid_request_error
        message: There is already another select option with the title "Medium".
      properties:
        status_code:
          enum:
          - 409
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - slug_conflict
          type: string
        message:
          example: There is already another select option with the title "Medium".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__options__option__patch_request_data:
      properties:
        title:
          description: The Title of the select option
          example: Medium
          minLength: 1
          type: string
        is_archived:
          description: "Whether or not to archive the select option. See our [archiving\
            \ guide](/docs/archiving-vs-deleting) for more information on archiving."
          example: false
          type: boolean
    _v2__target___identifier__attributes__attribute__options__option__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__options__option__patch_request_data'
      required:
      - data
    _v2__target___identifier__attributes__attribute__options__option__patch_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: Cannot find select attribute with select option title "Medium".
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: Cannot find select attribute with select option title "Medium".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__statuses_get_200_response:
      description: Success
      example:
        data:
        - target_time_in_status: P0Y0M1DT0H0M0S
          is_archived: false
          celebration_enabled: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            status_id: 11f07f01-c10f-4e05-a522-33e050bc52ee
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: In Progress
        - target_time_in_status: P0Y0M1DT0H0M0S
          is_archived: false
          celebration_enabled: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            status_id: 11f07f01-c10f-4e05-a522-33e050bc52ee
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: In Progress
      properties:
        data:
          items:
            $ref: '#/components/schemas/status'
          type: array
      required:
      - data
    _v2__target___identifier__attributes__attribute__statuses_post_request_data:
      properties:
        title:
          description: The Title of the status
          example: In Progress
          minLength: 1
          type: string
        celebration_enabled:
          default: false
          description: Whether arriving at this status triggers a celebration effect
          example: true
          type: boolean
        target_time_in_status:
          description: Target time for a record to spend in given status expressed
            as a ISO-8601 duration string
          example: P0Y0M1DT0H0M0S
          nullable: true
          pattern: "P(?:(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(?:T(\\d+(?:[\\.,]\\d+)?H)?(\\\
            d+(?:[\\.,]\\d+)?M)?(\\d+(?:[\\.,]\\d+)?S)?)?)"
          type: string
      required:
      - title
    _v2__target___identifier__attributes__attribute__statuses_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses_post_request_data'
      required:
      - data
    _v2__target___identifier__attributes__attribute__statuses_post_200_response:
      description: Success
      example:
        data:
          target_time_in_status: P0Y0M1DT0H0M0S
          is_archived: false
          celebration_enabled: false
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            status_id: 11f07f01-c10f-4e05-a522-33e050bc52ee
            attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          title: In Progress
      properties:
        data:
          $ref: '#/components/schemas/status'
      required:
      - data
    _v2__target___identifier__attributes__attribute__statuses_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: This attribute is not a status attribute.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: This attribute is not a status attribute.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__statuses_post_409_response:
      description: Conflict
      example:
        status_code: 6.027456183070403
        code: slug_conflict
        type: invalid_request_error
        message: There is already another status with the title "In Progress".
      properties:
        status_code:
          enum:
          - 409
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - slug_conflict
          type: string
        message:
          example: There is already another status with the title "In Progress".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2__target___identifier__attributes__attribute__statuses__status__patch_request_data:
      properties:
        title:
          description: The Title of the status
          example: In Progress
          minLength: 1
          type: string
        celebration_enabled:
          default: false
          description: Whether arriving at this status triggers a celebration effect
          example: true
          type: boolean
        target_time_in_status:
          description: Target time for a record to spend in given status expressed
            as a ISO-8601 duration string
          example: P0Y0M1DT0H0M0S
          nullable: true
          pattern: "P(?:(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(?:T(\\d+(?:[\\.,]\\d+)?H)?(\\\
            d+(?:[\\.,]\\d+)?M)?(\\d+(?:[\\.,]\\d+)?S)?)?)"
          type: string
        is_archived:
          description: "Whether or not to archive the status. See our [archiving guide](/docs/archiving-vs-deleting)\
            \ for more information on archiving."
          example: false
          type: boolean
    _v2__target___identifier__attributes__attribute__statuses__status__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2__target___identifier__attributes__attribute__statuses__status__patch_request_data'
      required:
      - data
    _v2__target___identifier__attributes__attribute__statuses__status__patch_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: Cannot find status attribute with status option title "Medium".
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: Cannot find status attribute with status option title "Medium".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records_query_post_request_sorts_inner_anyOf:
      description: Sort by attribute
      properties:
        direction:
          description: The direction to sort the results by.
          enum:
          - asc
          - desc
          type: string
        attribute:
          description: A slug or ID to identify the attribute to sort by.
          type: string
        field:
          description: Which field on the value to sort by e.g. "last_name" on a name
            value.
          type: string
      required:
      - attribute
      - direction
    _v2_objects__object__records_query_post_request_sorts_inner_anyOf_1_path_inner_inner:
      anyOf:
      - description: The slug or ID of the object e.g. "people".
        type: string
      - description: A slug or ID to identify the attribute to sort by.
        type: string
    _v2_objects__object__records_query_post_request_sorts_inner_anyOf_1:
      description: Sort by path
      properties:
        direction:
          description: The direction to sort the results by.
          enum:
          - asc
          - desc
          type: string
        path:
          description: "You may use the `path` property to traverse record reference\
            \ attributes and parent records on list entries. `path` accepts an array\
            \ of tuples where the first element of each tuple is the slug or ID of\
            \ a list/object, and the second element is the slug or ID of an attribute\
            \ on that list/object. The first element of the first tuple must correspond\
            \ to the list or object that you are querying. For example, if you wanted\
            \ to sort by the name of the parent record (a company) on a list with\
            \ the slug \"sales\", you would pass the value `[['sales', 'parent_record'],\
            \ ['companies', 'name']]`."
          items:
            items:
              $ref: '#/components/schemas/_v2_objects__object__records_query_post_request_sorts_inner_anyOf_1_path_inner_inner'
            maxItems: 2
            minItems: 2
            type: array
          type: array
        field:
          description: Which field on the value to sort by e.g. "last_name" on a name
            value.
          type: string
      required:
      - direction
      - path
    _v2_objects__object__records_query_post_request_sorts_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_request_sorts_inner_anyOf'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_request_sorts_inner_anyOf_1'
    _v2_objects__object__records_query_post_request:
      properties:
        filter:
          additionalProperties: {}
          description: "An object used to filter results to a subset of results. See\
            \ the [full guide to filtering and sorting here](/docs/filtering-and-sorting)."
          example:
            name: Ada Lovelace
        sorts:
          description: "An object used to sort results. See the [full guide to filtering\
            \ and sorting here](/docs/filtering-and-sorting)."
          example:
          - direction: asc
            attribute: name
            field: last_name
          items:
            $ref: '#/components/schemas/_v2_objects__object__records_query_post_request_sorts_inner'
          type: array
        limit:
          description: "The maximum number of results to return. Defaults to 500.\
            \ See the [full guide to pagination here](/docs/pagination)."
          example: 500
          type: number
        offset:
          description: "The number of results to skip over before returning. Defaults\
            \ to 0. See the [full guide to pagination here](/docs/pagination)."
          example: 0
          type: number
    _v2_objects__object__records_query_post_200_response_data_inner_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
        object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        workspace_id:
          description: A UUID identifying the workspace this record belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        object_id:
          description: A UUID identifying the object this record belongs to.
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
        record_id:
          description: A UUID identifying this record.
          example: bf071e1f-6035-429d-b874-d83ea64ea13b
          format: uuid
          type: string
      required:
      - object_id
      - record_id
      - workspace_id
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor:
      description: The actor that created this value.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf:
      additionalProperties: {}
      example:
        referenced_actor_type: workspace-member
        referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        attribute_type: actor-reference
        active_from: 2023-01-01T15:00:00.000000000Z
        created_by_actor:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        active_until: 2023-01-01T15:00:00.000000000Z
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        referenced_actor_type:
          description: "The type of the referenced actor. [Read more information on\
            \ actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the referenced actor.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          nullable: true
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - actor-reference
          example: actor-reference
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - referenced_actor_id
      - referenced_actor_type
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_1:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        value:
          description: A boolean representing whether the checkbox is checked or not.
            The string values 'true' and 'false' are also accepted.
          example: true
          type: boolean
        attribute_type:
          description: The attribute type of the value.
          enum:
          - checkbox
          example: checkbox
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_2:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        currency_value:
          description: A numerical representation of the currency value. A decimal
            with a max of 4 decimal places.
          example: 99
          type: number
        currency_code:
          description: The ISO4217 currency code representing the currency that the
            value is stored in.
          enum:
          - AUD
          - BRL
          - BEL
          - CAD
          - CNY
          - DKK
          - EUR
          - HKD
          - ISK
          - INR
          - ILS
          - JPY
          - KRW
          - MYR
          - NTD
          - NZD
          - NOK
          - PHP
          - PLN
          - GBP
          - SGD
          - ZAR
          - SEK
          - CHF
          - AED
          - USD
          example: USD
          nullable: true
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - currency
          example: currency
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - currency_value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_3:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - date
          example: date
          type: string
        value:
          description: "A date represents a single calendar year, month and day, independent\
            \ of timezone. If hours, months, seconds or timezones are provided, they\
            \ will be trimmed. For example, \"2023\" and \"2023-01\" will be coerced\
            \ into \"2023-01-01\", and \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T14:00:00\"\
            , \"2023-01-02T15:00:00.000000000\", and \"2023-01-02T15:00:00.000000000+02:00\"\
            \ will all be coerced to \"2023-01-02\". If a timezone is provided that\
            \ would result in a different calendar date in UTC, the date will be coerced\
            \ to UTC and then the timezone component will be trimmed. For example,\
            \ the value \"2023-01-02T23:00:00-10:00\" will be returned as \"2023-01-03\"\
            . The maximum date is \"9999-12-31\"."
          example: 2023-01-01
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_4:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        domain:
          example: app.attio.com
          type: string
        root_domain:
          example: attio.com
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - domain
          example: domain
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - domain
      - root_domain
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_5:
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        original_email_address:
          example: alice@app.attio.com
          type: string
        email_address:
          example: alice@app.attio.com
          type: string
        email_domain:
          example: app.attio.com
          type: string
        email_root_domain:
          example: attio.com
          type: string
        email_local_specifier:
          example: alice
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - email-address
          example: email-address
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - email_address
      - email_domain
      - email_local_specifier
      - email_root_domain
      - original_email_address
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_6:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        target_object:
          description: A slug identifying the object that the referenced record belongs
            to.
          example: people
          type: string
        target_record_id:
          description: A UUID to identify the referenced record.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - record-reference
          example: record-reference
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - target_object
      - target_record_id
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_7:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        interaction_type:
          description: The type of interaction e.g. calendar or email.
          enum:
          - calendar-event
          - call
          - chat-thread
          - email
          - in-person-meeting
          example: email
          type: string
        interacted_at:
          description: When the interaction occurred.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        owner_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - interaction
          example: interaction
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - interacted_at
      - interaction_type
      - owner_actor
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_8:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        line_1:
          description: The first line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: 1 Infinite Loop
          nullable: true
          type: string
        line_2:
          description: The second line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Block 1
          nullable: true
          type: string
        line_3:
          description: The third line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Hilldrop Estate
          nullable: true
          type: string
        line_4:
          description: The fourth line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Westborough
          nullable: true
          type: string
        locality:
          description: "The town, neighborhood or area the location is in."
          example: Cupertino
          nullable: true
          type: string
        region:
          description: "The state, county, province or region that the location is\
            \ in."
          example: CA
          nullable: true
          type: string
        postcode:
          description: "The postcode or zip code for the location. Note that this\
            \ value is not currently represented in the UI but will be persisted and\
            \ readable through API calls.}"
          example: "95014"
          nullable: true
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code for the country this location
            is in.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: US
          nullable: true
          type: string
        latitude:
          description: "The latitude of the location. Validated by the regular expression\
            \ `/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/`. Note that this value is\
            \ not currently represented in the UI but will be persisted and readable\
            \ through API calls.}"
          example: "37.331741"
          nullable: true
          pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$"
          type: string
        longitude:
          description: "The longitude of the location. Validated by the regular expression\
            \ `/^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/`"
          example: "-122.030333"
          nullable: true
          pattern: "^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - location
          example: location
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - country_code
      - created_by_actor
      - latitude
      - line_1
      - line_2
      - line_3
      - line_4
      - locality
      - longitude
      - postcode
      - region
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_9:
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        value:
          description: Numbers are persisted as 64 bit floats.
          example: 42
          type: number
        attribute_type:
          description: The attribute type of the value.
          enum:
          - number
          example: number
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_10:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        first_name:
          description: The first name.
          example: Ada
          type: string
        last_name:
          description: The last name.
          example: Lovelace
          type: string
        full_name:
          description: The full name.
          example: Ada Lovelace
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - personal-name
          example: personal-name
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - first_name
      - full_name
      - last_name
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_11:
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        original_phone_number:
          description: "The raw, original phone number, as inputted."
          example: "5558675309"
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code representing the country
            that this phone number belongs to.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: US
          type: string
        phone_number:
          example: "+15558675309"
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - phone-number
          example: phone-number
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - country_code
      - created_by_actor
      - original_phone_number
      - phone_number
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_12:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        status:
          $ref: '#/components/schemas/status'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - status
          example: status
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - status
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_13:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        value:
          description: A number between 0 and 5 (inclusive) to represent a star rating.
          example: 3
          type: number
        attribute_type:
          description: The attribute type of the value.
          enum:
          - rating
          example: rating
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_14:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        option:
          $ref: '#/components/schemas/select-option'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - select
          example: select
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - option
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_15:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        value:
          description: A raw text field. Values are limited to 10MB.
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - text
          example: text
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_16:
      additionalProperties: {}
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - timestamp
          example: timestamp
          type: string
        value:
          description: "A timestamp value represents a single, universal moment in\
            \ time using an ISO 8601 formatted string. This means that a timestamp\
            \ consists of a date, a time (with nanosecond precision), and a time zone.\
            \ Attio will coerce timestamps which do not provide full nanosecond precision\
            \ and UTC is assumed if no time zone is provided. For example, \"2023\"\
            , \"2023-01\", \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T13:00:00\"\
            , and \"2023-01-02T13:00:00.000000000\" will all be coerced to \"2023-01-02T13:00:00.000000000Z\"\
            . Timestamps are always returned in UTC. For example, writing a timestamp\
            \ value using the string \"2023-01-02T13:00:00.000000000+02:00\" will\
            \ result in the value \"2023-01-02T11:00:00.000000000Z\" being returned.\
            \ The maximum date is \"9999-12-31T23:59:59.999999999Z\"."
          example: 2023-01-01T15:00:00.000000000Z
          format: date
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - value
    _v2_objects__object__records_query_post_200_response_data_inner_values_value_inner:
      oneOf:
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_1'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_2'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_3'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_4'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_5'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_6'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_7'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_8'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_9'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_10'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_11'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_12'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_13'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_14'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_15'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_16'
    _v2_objects__object__records_query_post_200_response_data_inner:
      example:
        values:
          key:
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            attribute_type: actor-reference
            active_from: 2023-01-01T15:00:00.000000000Z
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            active_until: 2023-01-01T15:00:00.000000000Z
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            attribute_type: actor-reference
            active_from: 2023-01-01T15:00:00.000000000Z
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            active_until: 2023-01-01T15:00:00.000000000Z
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        id:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_id'
        created_at:
          description: When this record was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
        values:
          additionalProperties:
            items:
              $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner'
          description: "A record type with an attribute `api_slug` as the key, and\
            \ an array of value objects as the values."
      required:
      - created_at
      - id
      - values
    _v2_objects__object__records_query_post_200_response:
      description: Success
      example:
        data:
        - values:
            key:
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        - values:
            key:
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        data:
          items:
            $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner'
          type: array
      required:
      - data
    _v2_objects__object__records_query_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: filter_error
        type: invalid_request_error
        message: Error in filter.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - filter_error
          type: string
        message:
          example: Error in filter.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records_query_post_404_response:
      description: Not Found
      example:
        status_code: 6.027456183070403
        code: not_found
        type: invalid_request_error
        message: The referenced object was not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: The referenced object was not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records_put_request_data:
      additionalProperties: {}
      properties:
        values:
          additionalProperties:
            items: {}
          description: "An object with an attribute `api_slug` or `attribute_id` as\
            \ the key, and a single value (for single-select attributes), or an array\
            \ of values (for single or multi-select attributes) as the values. For\
            \ complete documentation on values for all attribute types, please see\
            \ our [attribute type docs](/docs/attribute-types)."
          example:
            "41252299-f8c7-4b5e-99c9-4ff8321d2f96": Text value
            multiselect_attribute:
            - Select option 1
            - Select option 2
      required:
      - values
    _v2_objects__object__records_put_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_objects__object__records_put_request_data'
      required:
      - data
    _v2_objects__object__records_put_200_response_data_values_value_inner_oneOf:
      additionalProperties: {}
      example:
        referenced_actor_type: workspace-member
        referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        attribute_type: actor-reference
        active_from: 2023-01-01T15:00:00.000000000Z
        created_by_actor:
          type: workspace-member
          id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        active_until: 2023-01-01T15:00:00.000000000Z
      properties:
        active_from:
          description: The point in time at which this value was made "active". `active_from`
            can be considered roughly analogous to `created_at`.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        active_until:
          description: "The point in time at which this value was deactivated. If\
            \ `null`, the value is active."
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          nullable: true
          type: string
        created_by_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        referenced_actor_type:
          description: "The type of the referenced actor. [Read more information on\
            \ actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the referenced actor.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          nullable: true
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - actor-reference
          example: actor-reference
          type: string
      required:
      - active_from
      - active_until
      - attribute_type
      - created_by_actor
      - referenced_actor_id
      - referenced_actor_type
    _v2_objects__object__records_put_200_response_data_values_value_inner:
      oneOf:
      - $ref: '#/components/schemas/_v2_objects__object__records_put_200_response_data_values_value_inner_oneOf'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_1'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_2'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_3'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_4'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_5'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_6'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_7'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_8'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_9'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_10'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_11'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_12'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_13'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_14'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_15'
      - $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_16'
    _v2_objects__object__records_put_200_response_data:
      example:
        values:
          key:
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            attribute_type: actor-reference
            active_from: 2023-01-01T15:00:00.000000000Z
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            active_until: 2023-01-01T15:00:00.000000000Z
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            attribute_type: actor-reference
            active_from: 2023-01-01T15:00:00.000000000Z
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            active_until: 2023-01-01T15:00:00.000000000Z
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
          object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        id:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_id'
        created_at:
          description: When this record was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
        values:
          additionalProperties:
            items:
              $ref: '#/components/schemas/_v2_objects__object__records_put_200_response_data_values_value_inner'
          description: "A record type with an attribute `api_slug` as the key, and\
            \ an array of value objects as the values."
      required:
      - created_at
      - id
      - values
    _v2_objects__object__records_put_200_response:
      description: Success
      example:
        data:
          values:
            key:
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
            - referenced_actor_type: workspace-member
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              attribute_type: actor-reference
              active_from: 2023-01-01T15:00:00.000000000Z
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              active_until: 2023-01-01T15:00:00.000000000Z
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        data:
          $ref: '#/components/schemas/_v2_objects__object__records_put_200_response_data'
      required:
      - data
    _v2_objects__object__records_put_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: No attribute was found for matching_attribute slug/ID "my-attribute".
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: No attribute was found for matching_attribute slug/ID "my-attribute".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records_post_request_data:
      properties:
        values:
          additionalProperties:
            items: {}
          description: "An object with an attribute `api_slug` or `attribute_id` as\
            \ the key, and a single value (for single-select attributes), or an array\
            \ of values (for single or multi-select attributes) as the values. For\
            \ complete documentation on values for all attribute types, please see\
            \ our [attribute type docs](/docs/attribute-types)."
          example:
            "41252299-f8c7-4b5e-99c9-4ff8321d2f96": Text value
            multiselect_attribute:
            - Select option 1
            - Select option 2
      required:
      - values
    _v2_objects__object__records_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_objects__object__records_post_request_data'
      required:
      - data
    _v2_objects__object__records_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: Cannot find select attribute with select option title "In Progress".
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: Cannot find select attribute with select option title "In Progress".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records__record_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Record with ID "891dcbfc-9141-415d-9b2a-2238a6cc012d" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Record with ID "891dcbfc-9141-415d-9b2a-2238a6cc012d" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records__record_id__patch_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: missing_value
        type: invalid_request_error
        message: Required value for attribute with ID "41252299-f8c7-4b5e-99c9-4ff8321d2f96"
          was not provided.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - missing_value
          type: string
        message:
          example: Required value for attribute with ID "41252299-f8c7-4b5e-99c9-4ff8321d2f96"
            was not provided.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records__record_id__attributes__attribute__values_get_200_response:
      description: Success
      example:
        data:
        - referenced_actor_type: workspace-member
          referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          attribute_type: actor-reference
          active_from: 2023-01-01T15:00:00.000000000Z
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          active_until: 2023-01-01T15:00:00.000000000Z
        - referenced_actor_type: workspace-member
          referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          attribute_type: actor-reference
          active_from: 2023-01-01T15:00:00.000000000Z
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          active_until: 2023-01-01T15:00:00.000000000Z
      properties:
        data:
          items:
            $ref: '#/components/schemas/_v2_objects__object__records_put_200_response_data_values_value_inner'
          type: array
      required:
      - data
    _v2_objects__object__records__record_id__attributes__attribute__values_get_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: Cannot set show_historic param to true when querying a non-historic
          attribute.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: Cannot set show_historic param to true when querying a non-historic
            attribute.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_objects__object__records__record_id__entries_get_200_response_data_inner:
      example:
        list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
        list_api_slug: hiring-engineering
        created_at: 2022-11-21T13:22:49.061281000Z
        entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
      properties:
        list_id:
          description: A UUID identifying the list that this record is in.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          format: uuid
          type: string
        list_api_slug:
          description: A human-readable slug for the list for use in URLs and responses.
          example: hiring-engineering
          type: string
        entry_id:
          description: A UUID identifying this entry on the list.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        created_at:
          description: When this entry was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
      required:
      - created_at
      - entry_id
      - list_api_slug
      - list_id
    _v2_objects__object__records__record_id__entries_get_200_response:
      description: Success
      example:
        data:
        - list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          list_api_slug: hiring-engineering
          created_at: 2022-11-21T13:22:49.061281000Z
          entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
        - list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          list_api_slug: hiring-engineering
          created_at: 2022-11-21T13:22:49.061281000Z
          entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
      properties:
        data:
          items:
            $ref: '#/components/schemas/_v2_objects__object__records__record_id__entries_get_200_response_data_inner'
          type: array
      required:
      - data
    _v2_lists_get_200_response:
      description: Success
      example:
        data:
        - parent_object:
          - people
          workspace_access: read-and-write
          workspace_member_access:
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          name: Hiring Engineering
          api_slug: hiring-engineering
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        - parent_object:
          - people
          workspace_access: read-and-write
          workspace_member_access:
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          name: Hiring Engineering
          api_slug: hiring-engineering
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          items:
            $ref: '#/components/schemas/list'
          type: array
      required:
      - data
    _v2_lists_post_request_data_workspace_member_access_inner:
      example:
        level: read-and-write
        workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        workspace_member_id:
          description: A UUID to identify the workspace member to grant access to.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
        level:
          description: The level of access to the list.
          enum:
          - full-access
          - read-and-write
          - read-only
          example: read-and-write
          type: string
      required:
      - level
      - workspace_member_id
    _v2_lists_post_request_data:
      properties:
        name:
          description: The human-readable name of the list.
          example: Enterprise Sales
          type: string
        api_slug:
          description: "A unique, human-readable slug to access the list through API\
            \ calls. Should be formatted in snake case."
          example: enterprise_sales
          type: string
        parent_object:
          description: A UUID or slug to identify the allowed object type for records
            added to this list.
          example: people
          type: string
        workspace_access:
          description: The level of access granted to all members of the workspace
            for this list. Pass `null` to keep the list private and only grant access
            to specific workspace members.
          enum:
          - full-access
          - read-and-write
          - read-only
          example: read-and-write
          nullable: true
          type: string
        workspace_member_access:
          description: The level of access granted to specific workspace members for
            this list. Pass an empty array to grant access to no workspace members.
          items:
            $ref: '#/components/schemas/_v2_lists_post_request_data_workspace_member_access_inner'
          type: array
      required:
      - api_slug
      - name
      - parent_object
      - workspace_access
      - workspace_member_access
    _v2_lists_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_lists_post_request_data'
      required:
      - data
    _v2_lists_post_200_response:
      description: Success
      example:
        data:
          parent_object:
          - people
          workspace_access: read-and-write
          workspace_member_access:
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - level: read-and-write
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          name: Hiring Engineering
          api_slug: hiring-engineering
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          $ref: '#/components/schemas/list'
      required:
      - data
    _v2_lists_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: Workspace member with ID "50cf242c-7fa3-4cad-87d0-75b1af71c57b" not
          found.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: Workspace member with ID "50cf242c-7fa3-4cad-87d0-75b1af71c57b"
            not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists_post_403_response:
      description: Forbidden
      example:
        status_code: 6.027456183070403
        code: billing_error
        type: auth_error
        message: "You attempted to create a List using permissions features that are\
          \ not currently supported on your plan. Please upgrade, contact sales, or\
          \ try a different access configuration for your list."
      properties:
        status_code:
          enum:
          - 403
          type: number
        type:
          enum:
          - auth_error
          type: string
        code:
          enum:
          - billing_error
          type: string
        message:
          example: "You attempted to create a List using permissions features that\
            \ are not currently supported on your plan. Please upgrade, contact sales,\
            \ or try a different access configuration for your list."
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists_post_404_response:
      description: Not Found
      example:
        status_code: 1.4658129805029452
        code: not_found
        type: invalid_request_error
        message: Parent object with slug/ID "people" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Parent object with slug/ID "people" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: List with slug/ID "enterprise_sales" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: List with slug/ID "enterprise_sales" not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__patch_request_data:
      properties:
        name:
          description: The human-readable name of the list.
          example: Enterprise Sales
          type: string
        api_slug:
          description: "A unique, human-readable slug to access the list through API\
            \ calls. Should be formatted in snake case."
          example: enterprise_sales
          type: string
        workspace_access:
          description: The level of access granted to all members of the workspace
            for this list. Pass `null` to keep the list private and only grant access
            to specific workspace members.
          enum:
          - full-access
          - read-and-write
          - read-only
          example: read-and-write
          nullable: true
          type: string
        workspace_member_access:
          description: The level of access granted to specific workspace members for
            this list. Pass an empty array to grant access to no workspace members.
          items:
            $ref: '#/components/schemas/_v2_lists_post_request_data_workspace_member_access_inner'
          type: array
    _v2_lists__list__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_lists__list__patch_request_data'
      required:
      - data
    _v2_lists__list__entries_query_post_200_response_data_inner_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
        entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
      properties:
        workspace_id:
          description: A UUID identifying the workspace this entry belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        list_id:
          description: A UUID identifying the list this entry is in.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          format: uuid
          type: string
        entry_id:
          description: A UUID identifying this entry.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
      required:
      - entry_id
      - list_id
      - workspace_id
    _v2_lists__list__entries_query_post_200_response_data_inner:
      example:
        parent_object: people
        entry_values:
          status:
          - active_from: 2023-01-01T15:00:00.000000000Z
            active_until: null
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            status:
              id:
                workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
                object_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
                attribute_id: e350362f-4b55-4c0f-93f4-379ae8ff2e5b
                status_id: 527def35-7994-4ef7-9584-80ef8de352a8
              title: In Progress
              is_archived: false
              target_time_in_status: null
              celebration_enabled: false
            attribute_type: status
          created_at:
          - active_from: 2023-01-01T15:00:00.000000000Z
            active_until: null
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            value: 2023-01-01T15:00:00.000000000Z
            attribute_type: timestamp
          created_by:
          - active_from: 2023-01-01T15:00:00.000000000Z
            active_until: null
            created_by_actor:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            referenced_actor_type: workspace-member
            attribute_type: actor-reference
        created_at: 2022-11-21T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
        parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
      properties:
        id:
          $ref: '#/components/schemas/_v2_lists__list__entries_query_post_200_response_data_inner_id'
        parent_record_id:
          description: A UUID identifying the record that is parent of the list entry.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        parent_object:
          description: A UUID or slug identifying the object that the parent record
            belongs to.
          example: people
          type: string
        created_at:
          description: When this entry was created.
          example: 2022-11-21T13:22:49.061281000Z
          type: string
        entry_values:
          additionalProperties:
            items:
              $ref: '#/components/schemas/_v2_objects__object__records_put_200_response_data_values_value_inner'
          description: A list of attribute values for the list entry (not attribute
            values for its parent record).
          example:
            status:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              status:
                id:
                  workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
                  object_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
                  attribute_id: e350362f-4b55-4c0f-93f4-379ae8ff2e5b
                  status_id: 527def35-7994-4ef7-9584-80ef8de352a8
                title: In Progress
                is_archived: false
                target_time_in_status: null
                celebration_enabled: false
              attribute_type: status
            created_at:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              value: 2023-01-01T15:00:00.000000000Z
              attribute_type: timestamp
            created_by:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_type: workspace-member
              attribute_type: actor-reference
      required:
      - created_at
      - entry_values
      - id
      - parent_object
      - parent_record_id
    _v2_lists__list__entries_query_post_200_response:
      description: Success
      example:
        data:
        - parent_object: people
          entry_values:
            status:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              status:
                id:
                  workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
                  object_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
                  attribute_id: e350362f-4b55-4c0f-93f4-379ae8ff2e5b
                  status_id: 527def35-7994-4ef7-9584-80ef8de352a8
                title: In Progress
                is_archived: false
                target_time_in_status: null
                celebration_enabled: false
              attribute_type: status
            created_at:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              value: 2023-01-01T15:00:00.000000000Z
              attribute_type: timestamp
            created_by:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_type: workspace-member
              attribute_type: actor-reference
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
        - parent_object: people
          entry_values:
            status:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              status:
                id:
                  workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
                  object_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
                  attribute_id: e350362f-4b55-4c0f-93f4-379ae8ff2e5b
                  status_id: 527def35-7994-4ef7-9584-80ef8de352a8
                title: In Progress
                is_archived: false
                target_time_in_status: null
                celebration_enabled: false
              attribute_type: status
            created_at:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              value: 2023-01-01T15:00:00.000000000Z
              attribute_type: timestamp
            created_by:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_type: workspace-member
              attribute_type: actor-reference
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
      properties:
        data:
          items:
            $ref: '#/components/schemas/_v2_lists__list__entries_query_post_200_response_data_inner'
          type: array
      required:
      - data
    _v2_lists__list__entries_put_request_data:
      properties:
        parent_record_id:
          description: A UUID identifying the record you want to add to the list.
            The record will become the 'parent' of the created list entry.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        parent_object:
          description: A UUID or slug identifying the object that the added parent
            record belongs to.
          example: people
          type: string
        entry_values:
          additionalProperties:
            items: {}
          description: "An object with an attribute `api_slug` or `attribute_id` as\
            \ the key, and a single value (for single-select attributes), or an array\
            \ of values (for single or multi-select attributes) as the values. For\
            \ complete documentation on values for all attribute types, please see\
            \ our [attribute type docs](/docs/attribute-types)."
          example:
            "41252299-f8c7-4b5e-99c9-4ff8321d2f96": Text value
            multiselect_attribute:
            - Select option 1
            - Select option 2
      required:
      - entry_values
      - parent_object
      - parent_record_id
    _v2_lists__list__entries_put_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_lists__list__entries_put_request_data'
      required:
      - data
    _v2_lists__list__entries_put_200_response:
      description: Success
      example:
        data:
          parent_object: people
          entry_values:
            status:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              status:
                id:
                  workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
                  object_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
                  attribute_id: e350362f-4b55-4c0f-93f4-379ae8ff2e5b
                  status_id: 527def35-7994-4ef7-9584-80ef8de352a8
                title: In Progress
                is_archived: false
                target_time_in_status: null
                celebration_enabled: false
              attribute_type: status
            created_at:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              value: 2023-01-01T15:00:00.000000000Z
              attribute_type: timestamp
            created_by:
            - active_from: 2023-01-01T15:00:00.000000000Z
              active_until: null
              created_by_actor:
                type: workspace-member
                id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
              referenced_actor_type: workspace-member
              attribute_type: actor-reference
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
      properties:
        data:
          $ref: '#/components/schemas/_v2_lists__list__entries_query_post_200_response_data_inner'
      required:
      - data
    _v2_lists__list__entries_put_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: multiple_match_results
        type: invalid_request_error
        message: Multiple entries were founds for the given parent record. Please
          remove duplicates or use the update or create entry endpoints instead.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - multiple_match_results
          type: string
        message:
          example: Multiple entries were founds for the given parent record. Please
            remove duplicates or use the update or create entry endpoints instead.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__entries_put_404_response:
      description: Not Found
      example:
        status_code: 6.027456183070403
        code: not_found
        type: invalid_request_error
        message: List with slug/ID "33ebdbe9-e529-47c9-b894-0ba25e9c15c0" was not
          found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: List with slug/ID "33ebdbe9-e529-47c9-b894-0ba25e9c15c0" was not
            found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__entries_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: value_not_found
        type: invalid_request_error
        message: Parent record with slug/ID "891dcbfc-9141-415d-9b2a-2238a6cc012d"
          not found.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: Parent record with slug/ID "891dcbfc-9141-415d-9b2a-2238a6cc012d"
            not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__entries_post_404_response:
      description: Not Found
      example:
        status_code: 6.027456183070403
        code: not_found
        type: invalid_request_error
        message: Could not find list with slug/ID "enterprise_sales".
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Could not find list with slug/ID "enterprise_sales".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_lists__list__entries__entry_id__put_request_data:
      additionalProperties: {}
      properties:
        entry_values:
          additionalProperties:
            items: {}
          description: "An object with an attribute `api_slug` or `attribute_id` as\
            \ the key, and a single value (for single-select attributes), or an array\
            \ of values (for single or multi-select attributes) as the values. For\
            \ complete documentation on values for all attribute types, please see\
            \ our [attribute type docs](/docs/attribute-types)."
          example:
            "41252299-f8c7-4b5e-99c9-4ff8321d2f96": Text value
            multiselect_attribute:
            - Select option 1
            - Select option 2
      required:
      - entry_values
    _v2_lists__list__entries__entry_id__put_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_lists__list__entries__entry_id__put_request_data'
      required:
      - data
    _v2_lists__list__entries__entry_id__put_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: immutable_value
        type: invalid_request_error
        message: The parent record for a list entry cannot be updated once created.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - immutable_value
          type: string
        message:
          example: The parent record for a list entry cannot be updated once created.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_workspace_members_get_200_response:
      description: Success
      example:
        data:
        - access_level: member
          email_address: susan.kare@apple.com
          avatar_url: https://lh3.googleusercontent.com/a/ABdFTp7z6OgAW9EqZx78wTqPfWClGCJCZXFjQfBG7rd9=s96-c
          last_name: Kare
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          first_name: Susan
        - access_level: member
          email_address: susan.kare@apple.com
          avatar_url: https://lh3.googleusercontent.com/a/ABdFTp7z6OgAW9EqZx78wTqPfWClGCJCZXFjQfBG7rd9=s96-c
          last_name: Kare
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          first_name: Susan
      properties:
        data:
          items:
            $ref: '#/components/schemas/workspace-member'
          type: array
      required:
      - data
    _v2_workspace_members__workspace_member_id__get_200_response:
      description: Success
      example:
        data:
          access_level: member
          email_address: susan.kare@apple.com
          avatar_url: https://lh3.googleusercontent.com/a/ABdFTp7z6OgAW9EqZx78wTqPfWClGCJCZXFjQfBG7rd9=s96-c
          last_name: Kare
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          first_name: Susan
      properties:
        data:
          $ref: '#/components/schemas/workspace-member'
      required:
      - data
    _v2_workspace_members__workspace_member_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Workspace member with ID "50cf242c-7fa3-4cad-87d0-75b1af71c57b" not
          found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Workspace member with ID "50cf242c-7fa3-4cad-87d0-75b1af71c57b"
            not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_notes_get_200_response:
      description: Success
      example:
        data:
        - parent_object: people
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            note_id: ff3f3bd4-40f4-4f80-8187-cd02385af424
          title: Initial Prospecting Call Summary
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          content_plaintext: |-
            Introduction
            Date and time of the call
            Participants
            Purpose of the call
            Customer Background
            Company overview (industry, size, location)
            Key business challenges
            Current software solutions (if any) and pain points
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        - parent_object: people
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            note_id: ff3f3bd4-40f4-4f80-8187-cd02385af424
          title: Initial Prospecting Call Summary
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          content_plaintext: |-
            Introduction
            Date and time of the call
            Participants
            Purpose of the call
            Customer Background
            Company overview (industry, size, location)
            Key business challenges
            Current software solutions (if any) and pain points
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          items:
            $ref: '#/components/schemas/note'
          type: array
      required:
      - data
    _v2_notes_post_request_data:
      properties:
        parent_object:
          description: The ID or slug of the parent object the note belongs to.
          example: people
          type: string
        parent_record_id:
          description: The ID of the parent record the note belongs to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        title:
          description: The note title. The title is plaintext only and has no formatting.
          example: Initial Prospecting Call Summary
          type: string
        format:
          description: "The format of the note content to be created. The `plaintext`\
            \ format uses the line feed character `\\n` to create new lines within\
            \ the note content. Rich text formatting, links and @references are not\
            \ supported."
          enum:
          - plaintext
          type: string
        content:
          description: The representation of the note content in the specified format.
          example: |-
            Introduction
            Date and time of the call
            Participants
            Purpose of the call
            Customer Background
            Company overview (industry, size, location)
            Key business challenges
            Current software solutions (if any) and pain points
          type: string
        created_at:
          description: "`created_at` will default to the current time. However, if\
            \ you wish to backdate a note for migration or other purposes, you can\
            \ override with a custom `created_at` value. Note that dates before 1970\
            \ or in the future are not allowed."
          example: 2023-01-01T15:00:00.000000000Z
          type: string
      required:
      - content
      - format
      - parent_object
      - parent_record_id
      - title
    _v2_notes_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_notes_post_request_data'
      required:
      - data
    _v2_notes_post_200_response:
      description: Success
      example:
        data:
          parent_object: people
          created_at: 2022-11-21T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            note_id: ff3f3bd4-40f4-4f80-8187-cd02385af424
          title: Initial Prospecting Call Summary
          parent_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          content_plaintext: |-
            Introduction
            Date and time of the call
            Participants
            Purpose of the call
            Customer Background
            Company overview (industry, size, location)
            Key business challenges
            Current software solutions (if any) and pain points
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          $ref: '#/components/schemas/note'
      required:
      - data
    _v2_notes__note_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Note with ID "ff3f3bd4-40f4-4f80-8187-cd02385af424" was not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Note with ID "ff3f3bd4-40f4-4f80-8187-cd02385af424" was not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_tasks_get_200_response:
      description: Success
      example:
        data:
        - deadline_at: 2023-01-01
          assignees:
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          created_at: 2022-11-21T13:22:49.061281000Z
          linked_records:
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            task_id: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          content_plaintext: Follow up on current software solutions
          is_completed: false
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
        - deadline_at: 2023-01-01
          assignees:
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          created_at: 2022-11-21T13:22:49.061281000Z
          linked_records:
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            task_id: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          content_plaintext: Follow up on current software solutions
          is_completed: false
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          items:
            $ref: '#/components/schemas/task'
          type: array
      required:
      - data
    _v2_tasks_post_request_data_linked_records_inner_anyOf:
      properties:
        target_object:
          description: The ID or slug of the parent object the tasks refers to. This
            can reference both standard and custom objects.`
          example: people
          type: string
        target_record_id:
          description: The ID of the parent record the task refers to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
      required:
      - target_object
      - target_record_id
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf:
      properties:
        domain:
          description: The full domain of the website.
          example: app.attio.com
          type: string
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_1:
      properties:
        email_address:
          description: An email address string
          example: alice@app.attio.com
          type: string
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_2:
      properties:
        value:
          description: Numbers are persisted as 64 bit floats.
          example: 17224912
          type: number
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_3:
      properties:
        original_phone_number:
          description: "The raw, original phone number, as inputted."
          example: "07234172834"
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code representing the country
            that this phone number belongs to.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: GB
          nullable: true
          type: string
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_4:
      properties:
        value:
          description: A raw text field. Values are limited to 10MB.
          type: string
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_1'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_2'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_3'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner_anyOf_4'
    _v2_tasks_post_request_data_linked_records_inner_anyOf_1:
      example:
        target_object: people
        matching_attribute_id_123:
        - value: matching_attribute_id_123
      properties:
        target_object:
          description: A UUID or slug to identify the object that the referenced record
            belongs to.
          example: people
          type: string
        '[slug_or_id_of_matching_attribute]':
          description: "In addition to referencing records directly by record ID,\
            \ you may also reference by a matching attribute of your choice. For example,\
            \ if you want to add a reference to the person record with email \"alice@website.com\"\
            , you should pass a value with `target_object` set to `\"people\"` and\
            \ `email_addresses` set to `[{email_address:\"alice@website.com\"}]`.\
            \ The key should be the slug or ID of the matching attribute you would\
            \ like to use and the value should be an array containing a single value\
            \ of the appropriate attribute type (as specified below). Matching on\
            \ multiple values is not currently supported. Matching attributes must\
            \ be unique. This process is similar to how you use the `matching_attribute`\
            \ query param in Attio's [assert endpoints](/reference/put_v2-objects-object-records)."
          items:
            $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1__slug_or_id_of_matching_attribute__inner'
          type: array
      required:
      - "[slug_or_id_of_matching_attribute]"
      - target_object
    _v2_tasks_post_request_data_linked_records_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1'
    _v2_tasks_post_request_data_assignees_inner_anyOf:
      properties:
        referenced_actor_type:
          description: "The actor type of the task assignee. Only `workspace-member`\
            \ actors can be assigned to tasks. [Read more information on actor types\
            \ here](/docs/actors)."
          enum:
          - workspace-member
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the actor assigned to this task.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
      required:
      - referenced_actor_id
      - referenced_actor_type
    _v2_tasks_post_request_data_assignees_inner_anyOf_1:
      additionalProperties: {}
      properties:
        workspace_member_email_address:
          description: Workspace member actors can be referenced by email address
            as well as actor ID.
          example: alice@attio.com
          type: string
      required:
      - workspace_member_email_address
    _v2_tasks_post_request_data_assignees_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_assignees_inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_assignees_inner_anyOf_1'
    _v2_tasks_post_request_data:
      properties:
        content:
          description: "The text content of the task, in the format specified by the\
            \ `format` property."
          example: Follow up on current software solutions
          type: string
        format:
          description: "The format of the task content to be created. Rich text formatting,\
            \ links and @references are not supported."
          enum:
          - plaintext
          type: string
        deadline_at:
          description: "The deadline of the task, in ISO 8601 format."
          example: 2023-01-01T15:00:00.000000000Z
          nullable: true
          type: string
        is_completed:
          description: Whether the task has been completed.
          example: false
          type: boolean
        linked_records:
          description: Records linked to the task. Creating record links within task
            content text is not possible via the API at present.
          items:
            $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner'
          type: array
        assignees:
          description: Workspace members assigned to this task.
          items:
            $ref: '#/components/schemas/_v2_tasks_post_request_data_assignees_inner'
          type: array
      required:
      - assignees
      - content
      - deadline_at
      - format
      - is_completed
      - linked_records
    _v2_tasks_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_tasks_post_request_data'
      required:
      - data
    _v2_tasks_post_200_response:
      description: Success
      example:
        data:
          deadline_at: 2023-01-01
          assignees:
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          - referenced_actor_type: workspace-member
            referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          created_at: 2022-11-21T13:22:49.061281000Z
          linked_records:
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          - target_object_id: people
            target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            task_id: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          content_plaintext: Follow up on current software solutions
          is_completed: false
          created_by_actor:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        data:
          $ref: '#/components/schemas/task'
      required:
      - data
    _v2_tasks_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: Only standard or custom object records can be linked to.
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: Only standard or custom object records can be linked to.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_tasks__task_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Could not find Task with ID "649e34f4-c39a-4f4d-99ef-48a36bef8f04".
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Could not find Task with ID "649e34f4-c39a-4f4d-99ef-48a36bef8f04".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_tasks__task_id__patch_request_data_linked_records_inner_anyOf:
      properties:
        target_object:
          description: The ID or slug of the parent object the tasks refers to. This
            can reference both standard and custom objects.`
          example: people
        target_record_id:
          description: The ID of the parent record the task refers to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
      required:
      - target_object
      - target_record_id
    _v2_tasks__task_id__patch_request_data_linked_records_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_tasks__task_id__patch_request_data_linked_records_inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_linked_records_inner_anyOf_1'
    _v2_tasks__task_id__patch_request_data_assignees_inner_anyOf:
      properties:
        referenced_actor_type:
          description: "The actor type of the task assignee. Only `workspace-member`\
            \ actors can be assigned to tasks. [Read more information on actor types\
            \ here](/docs/actors)."
          enum:
          - workspace-member
          example: workspace-member
        referenced_actor_id:
          description: The ID of the actor assigned to this task.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
      required:
      - referenced_actor_id
      - referenced_actor_type
    _v2_tasks__task_id__patch_request_data_assignees_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_tasks__task_id__patch_request_data_assignees_inner_anyOf'
      - $ref: '#/components/schemas/_v2_tasks_post_request_data_assignees_inner_anyOf_1'
    _v2_tasks__task_id__patch_request_data:
      additionalProperties: {}
      properties:
        deadline_at:
          description: "The deadline of the task, in ISO 8601 format."
          example: 2023-01-01T15:00:00.000000000Z
        is_completed:
          description: Whether the task has been completed.
          example: false
          type: boolean
        linked_records:
          description: Records linked to the task. Creating record links within task
            content text is not possible via the API at present.
          items:
            $ref: '#/components/schemas/_v2_tasks__task_id__patch_request_data_linked_records_inner'
        assignees:
          description: Workspace members assigned to this task.
          items:
            $ref: '#/components/schemas/_v2_tasks__task_id__patch_request_data_assignees_inner'
    _v2_tasks__task_id__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_tasks__task_id__patch_request_data'
      required:
      - data
    _v2_tasks__task_id__patch_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Object with slug/ID "649e34f4-c39a-4f4d-99ef-48a36bef8f04" not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Object with slug/ID "649e34f4-c39a-4f4d-99ef-48a36bef8f04" not
            found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_threads_get_200_response:
      description: Success
      example:
        data:
        - comments:
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            thread_id: a649e4d9-435c-43fb-83ba-847b4876f27a
        - comments:
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            thread_id: a649e4d9-435c-43fb-83ba-847b4876f27a
      properties:
        data:
          items:
            $ref: '#/components/schemas/thread'
          type: array
      required:
      - data
    _v2_threads__thread_id__get_200_response:
      description: Success
      example:
        data:
          comments:
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          - entry:
              list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
              entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
            thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            resolved_by:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            resolved_at: 2023-01-01T15:00:00.000000000Z
            author:
              type: workspace-member
              id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
            record:
              record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
              object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            created_at: 2023-01-01T15:00:00.000000000Z
            id:
              workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
              comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
            content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            thread_id: a649e4d9-435c-43fb-83ba-847b4876f27a
      properties:
        data:
          $ref: '#/components/schemas/thread'
      required:
      - data
    _v2_threads__thread_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Thread with ID "a649e4d9-435c-43fb-83ba-847b4876f27a" was not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Thread with ID "a649e4d9-435c-43fb-83ba-847b4876f27a" was not found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_comments_post_request_data_anyOf_author:
      description: The workspace member who wrote this comment. Note that other types
        of actors are not currently supported.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        type:
          enum:
          - workspace-member
        id:
          format: uuid
      required:
      - id
      - type
    _v2_comments_post_request_data_anyOf:
      additionalProperties: {}
      properties:
        format:
          description: The format that the comment content is provided in. The `plaintext`
            format uses the line feed character `\n` to create new lines within the
            note content. Rich text formatting and links are not supported.
          enum:
          - plaintext
        content:
          description: "The content of the comment itself. Workspace members can be\
            \ mentioned using their email address, otherwise email addresses will\
            \ be presented to users as clickable mailto links."
          example: "If I put the email address of my colleague on Attio in here, e.g.\
            \ alice@attio.com, they will be notified. Other emails (e.g. person@example.com)\
            \ will be turned into clickable links."
        author:
          $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_author'
        created_at:
          description: "`created_at` will default to the current time. However, if\
            \ you wish to backdate a comment for migration or other purposes, you\
            \ can override with a custom `created_at` value. Note that dates before\
            \ 1970 or in the future are not allowed."
          example: 2023-01-01T15:00:00.000000000Z
        thread_id:
          description: "If responding to an existing thread, this would be the ID\
            \ of that thread."
          example: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          format: uuid
      required:
      - author
      - content
      - format
      - thread_id
    _v2_comments_post_request_data_anyOf_1_record:
      properties:
        object:
          description: "If creating a top-level comment on a record, this is the slug\
            \ or ID of that object."
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        record_id:
          description: "If creating a top-level comment on a record, this is the ID\
            \ of that record."
          example: bf071e1f-6035-429d-b874-d83ea64ea13b
          format: uuid
      required:
      - object
      - record_id
    _v2_comments_post_request_data_anyOf_1:
      additionalProperties: {}
      properties:
        format:
          description: The format that the comment content is provided in. The `plaintext`
            format uses the line feed character `\n` to create new lines within the
            note content. Rich text formatting and links are not supported.
          enum:
          - plaintext
        content:
          description: "The content of the comment itself. Workspace members can be\
            \ mentioned using their email address, otherwise email addresses will\
            \ be presented to users as clickable mailto links."
          example: "If I put the email address of my colleague on Attio in here, e.g.\
            \ alice@attio.com, they will be notified. Other emails (e.g. person@example.com)\
            \ will be turned into clickable links."
        author:
          $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_author'
        created_at:
          description: "`created_at` will default to the current time. However, if\
            \ you wish to backdate a comment for migration or other purposes, you\
            \ can override with a custom `created_at` value. Note that dates before\
            \ 1970 or in the future are not allowed."
          example: 2023-01-01T15:00:00.000000000Z
        record:
          $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_1_record'
      required:
      - author
      - content
      - format
      - record
    _v2_comments_post_request_data_anyOf_2_entry:
      properties:
        list:
          description: "If creating a top-level comment on a list entry, this is the\
            \ slug or ID of that list."
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
        entry_id:
          description: "If creating a top-level comment on a list entry, this is the\
            \ ID of that entry."
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
      required:
      - entry_id
      - list
    _v2_comments_post_request_data_anyOf_2:
      additionalProperties: {}
      properties:
        format:
          description: The format that the comment content is provided in. The `plaintext`
            format uses the line feed character `\n` to create new lines within the
            note content. Rich text formatting and links are not supported.
          enum:
          - plaintext
        content:
          description: "The content of the comment itself. Workspace members can be\
            \ mentioned using their email address, otherwise email addresses will\
            \ be presented to users as clickable mailto links."
          example: "If I put the email address of my colleague on Attio in here, e.g.\
            \ alice@attio.com, they will be notified. Other emails (e.g. person@example.com)\
            \ will be turned into clickable links."
        author:
          $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_author'
        created_at:
          description: "`created_at` will default to the current time. However, if\
            \ you wish to backdate a comment for migration or other purposes, you\
            \ can override with a custom `created_at` value. Note that dates before\
            \ 1970 or in the future are not allowed."
          example: 2023-01-01T15:00:00.000000000Z
        entry:
          $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_2_entry'
      required:
      - author
      - content
      - entry
      - format
    _v2_comments_post_request_data:
      anyOf:
      - $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf'
      - $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_1'
      - $ref: '#/components/schemas/_v2_comments_post_request_data_anyOf_2'
    _v2_comments_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_comments_post_request_data'
      required:
      - data
    _v2_comments_post_200_response:
      description: Success
      example:
        data:
          entry:
            list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
            entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          thread_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          resolved_by:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          resolved_at: 2023-01-01T15:00:00.000000000Z
          author:
            type: workspace-member
            id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          record:
            record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
            object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          created_at: 2023-01-01T15:00:00.000000000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          content_plaintext: "Let's go ahead and close this deal, alice@attio.com."
      properties:
        data:
          $ref: '#/components/schemas/comment'
      required:
      - data
    _v2_comments_post_400_response:
      description: Bad Request
      example:
        code: value_not_found
        type: invalid_request_error
        message: "The referenced Thread could not be found, it might have been deleted."
        statusCode: 0.8008281904610115
      properties:
        statusCode:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - value_not_found
          type: string
        message:
          example: "The referenced Thread could not be found, it might have been deleted."
          type: string
      required:
      - code
      - message
      - statusCode
      - type
    _v2_comments__comment_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Comment with ID "aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2" was not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Comment with ID "aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2" was not
            found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_comments__comment_id__delete_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Could not find Comment with ID "aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2".
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Could not find Comment with ID "aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2".
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner_anyOf:
      properties:
        field:
          type: string
        operator:
          enum:
          - equals
          type: string
        value:
          type: string
      required:
      - field
      - operator
      - value
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner_anyOf_1:
      properties:
        field:
          type: string
        operator:
          enum:
          - not_equals
          type: string
        value:
          type: string
      required:
      - field
      - operator
      - value
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner:
      anyOf:
      - $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner_anyOf'
      - $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner_anyOf_1'
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf:
      properties:
        $or:
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner'
          type: array
      required:
      - $or
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf_1:
      properties:
        $and:
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf__or_inner'
          type: array
      required:
      - $and
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter:
      anyOf:
      - $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf'
      - $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter_anyOf_1'
      description: "Filters to determine whether the webhook event should be sent.\
        \ If null, the filter always passes."
      example:
        $and:
        - field: parent_object_id
          operator: equals
          value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      nullable: true
    _v2_webhooks_get_200_response_data_inner_subscriptions_inner:
      example:
        filter:
          $and:
          - field: parent_object_id
            operator: equals
            value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
        event_type: note.created
      properties:
        event_type:
          description: Type of event the webhook is subscribed to.
          enum:
          - comment.created
          - comment.resolved
          - comment.unresolved
          - comment.deleted
          - list.created
          - list.updated
          - list.deleted
          - list-attribute.created
          - list-attribute.updated
          - list-entry.created
          - list-entry.updated
          - list-entry.deleted
          - object-attribute.created
          - object-attribute.updated
          - note.created
          - note.updated
          - note.deleted
          - record.created
          - record.merged
          - record.updated
          - record.deleted
          - task.created
          - task.updated
          - task.deleted
          - workspace-member.created
          example: note.created
          type: string
        filter:
          $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner_filter'
      required:
      - event_type
      - filter
    _v2_webhooks_get_200_response_data_inner_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
      properties:
        workspace_id:
          description: The ID of the workspace the webhook belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        webhook_id:
          description: The ID of the webhook.
          example: 23e42eaf-323a-41da-b5bb-fd67eebda553
          format: uuid
          type: string
      required:
      - webhook_id
      - workspace_id
    _v2_webhooks_get_200_response_data_inner:
      example:
        subscriptions:
        - filter:
            $and:
            - field: parent_object_id
              operator: equals
              value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          event_type: note.created
        - filter:
            $and:
            - field: parent_object_id
              operator: equals
              value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          event_type: note.created
        target_url: https://example.com/webhook
        created_at: 2023-04-27T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
        status: active
      properties:
        target_url:
          description: URL where the webhook events will be delivered to.
          example: https://example.com/webhook
          format: uri
          pattern: ^https:\/\/.*
          type: string
        subscriptions:
          description: One or more events the webhook is subscribed to.
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner'
          type: array
        id:
          $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_id'
        status:
          description: "The state of the webhook. Webhooks marked as active and degraded\
            \ will receive events, inactive ones will not. If a webhook remains in\
            \ the degraded state for 7 days, it will be marked inactive."
          enum:
          - active
          - degraded
          - inactive
          example: active
          type: string
        created_at:
          description: When the webhook was created.
          example: 2023-04-27T13:22:49.061281000Z
          type: string
      required:
      - created_at
      - id
      - status
      - subscriptions
      - target_url
    _v2_webhooks_get_200_response:
      description: Success
      example:
        data:
        - subscriptions:
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          target_url: https://example.com/webhook
          created_at: 2023-04-27T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
          status: active
        - subscriptions:
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          target_url: https://example.com/webhook
          created_at: 2023-04-27T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
          status: active
      properties:
        data:
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner'
          type: array
      required:
      - data
    _v2_webhooks_post_request_data:
      properties:
        target_url:
          description: URL where the webhook events will be delivered to.
          example: https://example.com/webhook
          format: uri
          pattern: ^https:\/\/.*
          type: string
        subscriptions:
          description: One or more events the webhook is subscribed to.
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner'
          type: array
      required:
      - subscriptions
      - target_url
    _v2_webhooks_post_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_webhooks_post_request_data'
      required:
      - data
    _v2_webhooks_post_200_response_data:
      example:
        subscriptions:
        - filter:
            $and:
            - field: parent_object_id
              operator: equals
              value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          event_type: note.created
        - filter:
            $and:
            - field: parent_object_id
              operator: equals
              value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          event_type: note.created
        target_url: https://example.com/webhook
        created_at: 2023-04-27T13:22:49.061281000Z
        id:
          workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
          webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
        secret: ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb
        status: active
      properties:
        target_url:
          description: URL where the webhook events will be delivered to.
          example: https://example.com/webhook
          format: uri
          pattern: ^https:\/\/.*
          type: string
        subscriptions:
          description: One or more events the webhook is subscribed to.
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner'
          type: array
        id:
          $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_id'
        status:
          description: "The state of the webhook. Webhooks marked as active and degraded\
            \ will receive events, inactive ones will not. If a webhook remains in\
            \ the degraded state for 7 days, it will be marked inactive."
          enum:
          - active
          - degraded
          - inactive
          example: active
          type: string
        created_at:
          description: When the webhook was created.
          example: 2023-04-27T13:22:49.061281000Z
          type: string
        secret:
          description: The key which is used to sign the webhook events. This is only
            shown when setting up the webhook initially.
          example: ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb
          type: string
      required:
      - created_at
      - id
      - secret
      - status
      - subscriptions
      - target_url
    _v2_webhooks_post_200_response:
      description: Success
      example:
        data:
          subscriptions:
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          target_url: https://example.com/webhook
          created_at: 2023-04-27T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
          secret: ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb
          status: active
      properties:
        data:
          $ref: '#/components/schemas/_v2_webhooks_post_200_response_data'
      required:
      - data
    _v2_webhooks_post_400_response:
      description: Bad Request
      example:
        status_code: 0.8008281904610115
        code: validation_type
        type: invalid_request_error
        message: Related list not found
      properties:
        status_code:
          enum:
          - 400
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - validation_type
          type: string
        message:
          example: Related list not found
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_webhooks__webhook_id__get_200_response:
      description: Success
      example:
        data:
          subscriptions:
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          - filter:
              $and:
              - field: parent_object_id
                operator: equals
                value: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            event_type: note.created
          target_url: https://example.com/webhook
          created_at: 2023-04-27T13:22:49.061281000Z
          id:
            workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
            webhook_id: 23e42eaf-323a-41da-b5bb-fd67eebda553
          status: active
      properties:
        data:
          $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner'
      required:
      - data
    _v2_webhooks__webhook_id__get_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Webhook with ID "23e42eaf-323a-41da-b5bb-fd67eebda553" was not found.
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Webhook with ID "23e42eaf-323a-41da-b5bb-fd67eebda553" was not
            found.
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_webhooks__webhook_id__delete_404_response:
      description: Not Found
      example:
        status_code: 0.8008281904610115
        code: not_found
        type: invalid_request_error
        message: Webhook not found
      properties:
        status_code:
          enum:
          - 404
          type: number
        type:
          enum:
          - invalid_request_error
          type: string
        code:
          enum:
          - not_found
          type: string
        message:
          example: Webhook not found
          type: string
      required:
      - code
      - message
      - status_code
      - type
    _v2_webhooks__webhook_id__patch_request_data:
      properties:
        target_url:
          description: URL where the webhook events will be delivered to.
          example: https://example.com/webhook
          format: uri
          pattern: ^https:\/\/.*
          type: string
        subscriptions:
          description: One or more events the webhook is subscribed to.
          items:
            $ref: '#/components/schemas/_v2_webhooks_get_200_response_data_inner_subscriptions_inner'
          type: array
    _v2_webhooks__webhook_id__patch_request:
      properties:
        data:
          $ref: '#/components/schemas/_v2_webhooks__webhook_id__patch_request_data'
      required:
      - data
    _v2_self_get_200_response_anyOf:
      example:
        active: true
      properties:
        active:
          enum:
          - false
          type: boolean
      required:
      - active
    _v2_self_get_200_response_anyOf_1:
      properties:
        active:
          description: Whether the token is currently active and usable.
          type: boolean
        scope:
          description: A space-separated list of scopes associated with this token
          type: string
        client_id:
          description: The app ID of the OAuth application that requested this token
          type: string
        token_type:
          description: "The type of token, always Bearer for tokens acquired via the\
            \ OAuth 2.0 flow."
          enum:
          - Bearer
          type: string
        exp:
          description: "The time at which this token will expire, if set, as a number\
            \ of seconds since January 1 1970 UTC."
          nullable: true
          type: number
        iat:
          description: "The time at which this token was issued, as a number of seconds\
            \ since January 1 1970 UTC."
          type: number
        sub:
          description: "Since Bearer tokens grant Workspace-level permissions, this\
            \ property contains the workspace_id."
          format: uuid
          type: string
        aud:
          description: "The intended audience for this token, for Bearer tokens this\
            \ is the same as the client_id."
          type: string
        iss:
          description: The issuer of the token. Always attio.com
          enum:
          - attio.com
          type: string
        authorized_by_workspace_member_id:
          description: "The ID of the workspace member who authorised this token initially,\
            \ if known"
          format: uuid
          nullable: true
          type: string
        workspace_id:
          description: The ID of the workspace the token is scoped to.
          format: uuid
          type: string
        workspace_name:
          description: The name of the workspace the token is scoped to.
          type: string
        workspace_slug:
          description: The slug of the workspace the token is scoped to.
          type: string
        workspace_logo_url:
          description: The logo URL of the workspace the token is scoped to.
          format: uri
          nullable: true
          type: string
      required:
      - active
      - aud
      - authorized_by_workspace_member_id
      - client_id
      - exp
      - iat
      - iss
      - scope
      - sub
      - token_type
      - workspace_id
      - workspace_logo_url
      - workspace_name
      - workspace_slug
    _v2_self_get_200_response:
      anyOf:
      - $ref: '#/components/schemas/_v2_self_get_200_response_anyOf'
      - $ref: '#/components/schemas/_v2_self_get_200_response_anyOf_1'
    status_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        status_id: 11f07f01-c10f-4e05-a522-33e050bc52ee
        attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
        object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        workspace_id:
          description: The ID of the workspace
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        object_id:
          description: The ID of the object
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
        attribute_id:
          description: The ID of the attribute
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          format: uuid
          type: string
        status_id:
          description: The ID of the status
          example: 11f07f01-c10f-4e05-a522-33e050bc52ee
          format: uuid
          type: string
      required:
      - attribute_id
      - object_id
      - status_id
      - workspace_id
    select_option_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        attribute_id: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
        option_id: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
        object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        workspace_id:
          description: The ID of the workspace
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        object_id:
          description: The ID of the object
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
        attribute_id:
          description: The ID of the attribute
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          format: uuid
          type: string
        option_id:
          description: The ID of the select option
          example: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
          format: uuid
          type: string
      required:
      - attribute_id
      - object_id
      - option_id
      - workspace_id
    input_value_anyOf:
      additionalProperties: false
      properties:
        referenced_actor_type:
          description: "The type of the referenced actor. Currently, only workspace\
            \ members can be written into actor reference attributes. [Read more information\
            \ on actor types here](/docs/actors)."
          enum:
          - workspace-member
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the referenced Actor.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
      required:
      - referenced_actor_id
      - referenced_actor_type
    input_value_anyOf_1:
      additionalProperties: false
      properties:
        workspace_member_email_address:
          description: Workspace member actors can be referenced by email address
            as well as actor ID.
          example: alice@attio.com
          type: string
      required:
      - workspace_member_email_address
    input_value_anyOf_2:
      additionalProperties: false
      properties:
        value:
          description: A boolean representing whether the checkbox is checked or not.
            The string values 'true' and 'false' are also accepted.
          example: true
          type: boolean
      required:
      - value
    input_value_anyOf_3:
      additionalProperties: false
      properties:
        currency_value:
          description: A numerical representation of the currency value. A decimal
            with a max of 4 decimal places.
          example: 99
          type: number
      required:
      - currency_value
    input_value_anyOf_4:
      additionalProperties: false
      properties:
        value:
          description: "A date represents a single calendar year, month and day, independent\
            \ of timezone. If hours, months, seconds or timezones are provided, they\
            \ will be trimmed. For example, \"2023\" and \"2023-01\" will be coerced\
            \ into \"2023-01-01\", and \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T14:00:00\"\
            , \"2023-01-02T15:00:00.000000000\", and \"2023-01-02T15:00:00.000000000+02:00\"\
            \ will all be coerced to \"2023-01-02\". If a timezone is provided that\
            \ would result in a different calendar date in UTC, the date will be coerced\
            \ to UTC and then the timezone component will be trimmed. For example,\
            \ the value \"2023-01-02T23:00:00-10:00\" will be returned as \"2023-01-03\"\
            . The maximum date is \"9999-12-31\"."
          example: 2023-01-01
          type: string
      required:
      - value
    input_value_anyOf_5:
      additionalProperties: false
      properties:
        target_object:
          description: A UUID or slug to identify the object that the referenced record
            belongs to.
          example: people
          type: string
        target_record_id:
          description: A UUID to identify the referenced record.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
      required:
      - target_object
      - target_record_id
    input_value_anyOf_6:
      additionalProperties: false
      properties:
        interaction_type:
          description: The type of interaction e.g. calendar or email.
          enum:
          - calendar-event
          - call
          - chat-thread
          - email
          - in-person-meeting
          example: email
          type: string
        interacted_at:
          description: When the interaction occurred.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        owner_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
      required:
      - interacted_at
      - interaction_type
      - owner_actor
    input_value_anyOf_7:
      additionalProperties: false
      properties:
        line_1:
          description: The first line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: 1 Infinite Loop
          nullable: true
          type: string
        line_2:
          description: The second line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Block 1
          nullable: true
          type: string
        line_3:
          description: The third line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Hilldrop Estate
          nullable: true
          type: string
        line_4:
          description: The fourth line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Westborough
          nullable: true
          type: string
        locality:
          description: "The town, neighborhood or area the location is in."
          example: Cupertino
          nullable: true
          type: string
        region:
          description: "The state, county, province or region that the location is\
            \ in."
          example: CA
          nullable: true
          type: string
        postcode:
          description: "The postcode or zip code for the location. Note that this\
            \ value is not currently represented in the UI but will be persisted and\
            \ readable through API calls.}"
          example: "95014"
          nullable: true
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code for the country this location
            is in.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: US
          nullable: true
          type: string
        latitude:
          description: "The latitude of the location. Validated by the regular expression\
            \ `/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/`. Note that this value is\
            \ not currently represented in the UI but will be persisted and readable\
            \ through API calls.}"
          example: "37.331741"
          nullable: true
          pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$"
          type: string
        longitude:
          description: "The longitude of the location. Validated by the regular expression\
            \ `/^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/`"
          example: "-122.030333"
          nullable: true
          pattern: "^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          type: string
      required:
      - country_code
      - latitude
      - line_1
      - line_2
      - line_3
      - line_4
      - locality
      - longitude
      - postcode
      - region
    input_value_anyOf_8:
      additionalProperties: false
      properties:
        value:
          description: Numbers are persisted as 64 bit floats.
          example: 42
          type: number
      required:
      - value
    input_value_anyOf_9:
      properties:
        first_name:
          description: The first name.
          example: Ada
          type: string
        last_name:
          description: The last name.
          example: Lovelace
          type: string
        full_name:
          description: The full name.
          example: Ada Lovelace
          type: string
    input_value_anyOf_10:
      properties:
        original_phone_number:
          description: "A phone number which is either a) prefixed with a country\
            \ code (e.g. `+44....`) or b) a local number, where `country_code` is\
            \ specified in addition."
          example: "+15558675309"
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code representing the country
            that this phone number belongs to. Optional if `original_phone_number`
            includes a country code prefix.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: GB
          nullable: true
          type: string
      required:
      - original_phone_number
    input_value_anyOf_11:
      additionalProperties: false
      properties:
        status:
          description: The UUID or status title identifying the selected status.
          example: In Progress
          minLength: 1
          type: string
      required:
      - status
    input_value_anyOf_12:
      additionalProperties: false
      properties:
        value:
          description: A number between 0 and 5 (inclusive) to represent a star rating.
          example: 3
          type: number
      required:
      - value
    input_value_anyOf_13:
      additionalProperties: false
      properties:
        option:
          description: The UUID or select option title identifying the selected select
            option.
          example: Medium
          minLength: 1
          type: string
      required:
      - option
    input_value_anyOf_14:
      additionalProperties: false
      properties:
        value:
          description: A raw text field. Values are limited to 10MB.
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
      required:
      - value
    input_value_anyOf_15:
      additionalProperties: false
      properties:
        value:
          description: "A timestamp value represents a single, universal moment in\
            \ time using an ISO 8601 formatted string. This means that a timestamp\
            \ consists of a date, a time (with nanosecond precision), and a time zone.\
            \ Attio will coerce timestamps which do not provide full nanosecond precision\
            \ and UTC is assumed if no time zone is provided. For example, \"2023\"\
            , \"2023-01\", \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T13:00:00\"\
            , and \"2023-01-02T13:00:00.000000000\" will all be coerced to \"2023-01-02T13:00:00.000000000Z\"\
            . Timestamps are always returned in UTC. For example, writing a timestamp\
            \ value using the string \"2023-01-02T13:00:00.000000000+02:00\" will\
            \ result in the value \"2023-01-02T11:00:00.000000000Z\" being returned.\
            \ The maximum date is \"9999-12-31T23:59:59.999999999Z\"."
          example: 2023-01-01T15:00:00.000000000Z
          format: date
          type: string
      required:
      - value
    output_value_anyOf:
      additionalProperties: false
      properties:
        referenced_actor_type:
          description: "The type of the referenced actor. [Read more information on\
            \ actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the referenced actor.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          nullable: true
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - actor-reference
          example: actor-reference
          type: string
      required:
      - attribute_type
      - referenced_actor_id
      - referenced_actor_type
    output_value_anyOf_1:
      additionalProperties: false
      properties:
        value:
          description: A boolean representing whether the checkbox is checked or not.
            The string values 'true' and 'false' are also accepted.
          example: true
          type: boolean
        attribute_type:
          description: The attribute type of the value.
          enum:
          - checkbox
          example: checkbox
          type: string
      required:
      - attribute_type
      - value
    output_value_anyOf_2:
      additionalProperties: false
      properties:
        currency_value:
          description: A numerical representation of the currency value. A decimal
            with a max of 4 decimal places.
          example: 99
          type: number
        currency_code:
          description: The ISO4217 currency code representing the currency that the
            value is stored in.
          enum:
          - AUD
          - BRL
          - BEL
          - CAD
          - CNY
          - DKK
          - EUR
          - HKD
          - ISK
          - INR
          - ILS
          - JPY
          - KRW
          - MYR
          - NTD
          - NZD
          - NOK
          - PHP
          - PLN
          - GBP
          - SGD
          - ZAR
          - SEK
          - CHF
          - AED
          - USD
          example: USD
          nullable: true
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - currency
          example: currency
          type: string
      required:
      - attribute_type
      - currency_value
    output_value_anyOf_3:
      additionalProperties: false
      properties:
        attribute_type:
          description: The attribute type of the value.
          enum:
          - date
          example: date
          type: string
        value:
          description: "A date represents a single calendar year, month and day, independent\
            \ of timezone. If hours, months, seconds or timezones are provided, they\
            \ will be trimmed. For example, \"2023\" and \"2023-01\" will be coerced\
            \ into \"2023-01-01\", and \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T14:00:00\"\
            , \"2023-01-02T15:00:00.000000000\", and \"2023-01-02T15:00:00.000000000+02:00\"\
            \ will all be coerced to \"2023-01-02\". If a timezone is provided that\
            \ would result in a different calendar date in UTC, the date will be coerced\
            \ to UTC and then the timezone component will be trimmed. For example,\
            \ the value \"2023-01-02T23:00:00-10:00\" will be returned as \"2023-01-03\"\
            . The maximum date is \"9999-12-31\"."
          example: 2023-01-01
          type: string
      required:
      - attribute_type
      - value
    output_value_anyOf_4:
      additionalProperties: false
      properties:
        domain:
          example: app.attio.com
          type: string
        root_domain:
          example: attio.com
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - domain
          example: domain
          type: string
      required:
      - attribute_type
      - domain
      - root_domain
    output_value_anyOf_5:
      properties:
        original_email_address:
          example: alice@app.attio.com
          type: string
        email_address:
          example: alice@app.attio.com
          type: string
        email_domain:
          example: app.attio.com
          type: string
        email_root_domain:
          example: attio.com
          type: string
        email_local_specifier:
          example: alice
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - email-address
          example: email-address
          type: string
      required:
      - attribute_type
      - email_address
      - email_domain
      - email_local_specifier
      - email_root_domain
      - original_email_address
    output_value_anyOf_6:
      additionalProperties: false
      properties:
        target_object:
          description: A slug identifying the object that the referenced record belongs
            to.
          example: people
          type: string
        target_record_id:
          description: A UUID to identify the referenced record.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - record-reference
          example: record-reference
          type: string
      required:
      - attribute_type
      - target_object
      - target_record_id
    output_value_anyOf_7:
      additionalProperties: false
      properties:
        interaction_type:
          description: The type of interaction e.g. calendar or email.
          enum:
          - calendar-event
          - call
          - chat-thread
          - email
          - in-person-meeting
          example: email
          type: string
        interacted_at:
          description: When the interaction occurred.
          example: 2023-01-01T15:00:00.000000000Z
          format: date-time
          type: string
        owner_actor:
          $ref: '#/components/schemas/_v2_objects__object__records_query_post_200_response_data_inner_values_value_inner_oneOf_created_by_actor'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - interaction
          example: interaction
          type: string
      required:
      - attribute_type
      - interacted_at
      - interaction_type
      - owner_actor
    output_value_anyOf_8:
      additionalProperties: false
      properties:
        line_1:
          description: The first line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: 1 Infinite Loop
          nullable: true
          type: string
        line_2:
          description: The second line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Block 1
          nullable: true
          type: string
        line_3:
          description: The third line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Hilldrop Estate
          nullable: true
          type: string
        line_4:
          description: The fourth line of the address. Note that this value is not
            currently represented in the UI but will be persisted and readable through
            API calls.
          example: Westborough
          nullable: true
          type: string
        locality:
          description: "The town, neighborhood or area the location is in."
          example: Cupertino
          nullable: true
          type: string
        region:
          description: "The state, county, province or region that the location is\
            \ in."
          example: CA
          nullable: true
          type: string
        postcode:
          description: "The postcode or zip code for the location. Note that this\
            \ value is not currently represented in the UI but will be persisted and\
            \ readable through API calls.}"
          example: "95014"
          nullable: true
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code for the country this location
            is in.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: US
          nullable: true
          type: string
        latitude:
          description: "The latitude of the location. Validated by the regular expression\
            \ `/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/`. Note that this value is\
            \ not currently represented in the UI but will be persisted and readable\
            \ through API calls.}"
          example: "37.331741"
          nullable: true
          pattern: "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$"
          type: string
        longitude:
          description: "The longitude of the location. Validated by the regular expression\
            \ `/^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/`"
          example: "-122.030333"
          nullable: true
          pattern: "^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - location
          example: location
          type: string
      required:
      - attribute_type
      - country_code
      - latitude
      - line_1
      - line_2
      - line_3
      - line_4
      - locality
      - longitude
      - postcode
      - region
    output_value_anyOf_9:
      properties:
        value:
          description: Numbers are persisted as 64 bit floats.
          example: 42
          type: number
        attribute_type:
          description: The attribute type of the value.
          enum:
          - number
          example: number
          type: string
      required:
      - attribute_type
      - value
    output_value_anyOf_10:
      additionalProperties: false
      properties:
        first_name:
          description: The first name.
          example: Ada
          type: string
        last_name:
          description: The last name.
          example: Lovelace
          type: string
        full_name:
          description: The full name.
          example: Ada Lovelace
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - personal-name
          example: personal-name
          type: string
      required:
      - attribute_type
      - first_name
      - full_name
      - last_name
    output_value_anyOf_11:
      properties:
        original_phone_number:
          description: "The raw, original phone number, as inputted."
          example: "5558675309"
          type: string
        country_code:
          description: The ISO 3166-1 alpha-2 country code representing the country
            that this phone number belongs to.
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - AN
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - "NO"
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          example: US
          type: string
        phone_number:
          example: "+15558675309"
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - phone-number
          example: phone-number
          type: string
      required:
      - attribute_type
      - country_code
      - original_phone_number
      - phone_number
    output_value_anyOf_12:
      additionalProperties: false
      properties:
        status:
          description: The UUID identifying the selected status.
          example: 11f07f01-c10f-4e05-a522-33e050bc52ee
          format: uuid
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - status
          example: status
          type: string
      required:
      - attribute_type
      - status
    output_value_anyOf_13:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/status'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - status
          example: status
          type: string
      required:
      - attribute_type
      - status
    output_value_anyOf_14:
      additionalProperties: false
      properties:
        value:
          description: A number between 0 and 5 (inclusive) to represent a star rating.
          example: 3
          type: number
        attribute_type:
          description: The attribute type of the value.
          enum:
          - rating
          example: rating
          type: string
      required:
      - attribute_type
      - value
    output_value_anyOf_15:
      additionalProperties: false
      properties:
        option:
          description: The UUID identifying the selected select option.
          example: 08c2c59a-c18e-40c6-8dc4-95415313b2ea
          format: uuid
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - select
          example: select
          type: string
      required:
      - attribute_type
      - option
    output_value_anyOf_16:
      additionalProperties: false
      properties:
        option:
          $ref: '#/components/schemas/select-option'
        attribute_type:
          description: The attribute type of the value.
          enum:
          - select
          example: select
          type: string
      required:
      - attribute_type
      - option
    output_value_anyOf_17:
      additionalProperties: false
      properties:
        value:
          description: A raw text field. Values are limited to 10MB.
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        attribute_type:
          description: The attribute type of the value.
          enum:
          - text
          example: text
          type: string
      required:
      - attribute_type
      - value
    output_value_anyOf_18:
      additionalProperties: false
      properties:
        attribute_type:
          description: The attribute type of the value.
          enum:
          - timestamp
          example: timestamp
          type: string
        value:
          description: "A timestamp value represents a single, universal moment in\
            \ time using an ISO 8601 formatted string. This means that a timestamp\
            \ consists of a date, a time (with nanosecond precision), and a time zone.\
            \ Attio will coerce timestamps which do not provide full nanosecond precision\
            \ and UTC is assumed if no time zone is provided. For example, \"2023\"\
            , \"2023-01\", \"2023-01-02\", \"2023-01-02T13:00\", \"2023-01-02T13:00:00\"\
            , and \"2023-01-02T13:00:00.000000000\" will all be coerced to \"2023-01-02T13:00:00.000000000Z\"\
            . Timestamps are always returned in UTC. For example, writing a timestamp\
            \ value using the string \"2023-01-02T13:00:00.000000000+02:00\" will\
            \ result in the value \"2023-01-02T11:00:00.000000000Z\" being returned.\
            \ The maximum date is \"9999-12-31T23:59:59.999999999Z\"."
          example: 2023-01-01T15:00:00.000000000Z
          format: date
          type: string
      required:
      - attribute_type
      - value
    attribute_id:
      properties:
        workspace_id:
          description: A UUID representing the workspace this attribute belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        object_id:
          description: A UUID to identify the object or list that this attribute belongs
            to
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
        attribute_id:
          description: A UUID to identify this attribute.
          example: 41252299-f8c7-4b5e-99c9-4ff8321d2f96
          format: uuid
          type: string
      required:
      - attribute_id
      - object_id
      - workspace_id
    attribute_default_value_anyOf_template:
      anyOf:
      - description: "For actor reference attributes, you may pass a dynamic value\
          \ of `\"current-user\"`. When creating new records or entries, this will\
          \ cause the actor reference value to be populated with either the workspace\
          \ member or API token that created the record/entry."
        enum:
        - current-user
        example: current-user
        type: string
      - description: "Timestamp attributes may use an ISO 8601 duration as a dynamic\
          \ value. For example, `\"P1M\"` would set the value to the current time\
          \ plus one month."
        example: P1M
        type: string
      - description: "Date attributes may use an ISO 8601 duration as a dynamic value.\
          \ For example, `\"P1M\"` would set the value to the current time plus one\
          \ month."
        example: P1M
        type: string
    attribute_default_value_anyOf:
      properties:
        type:
          enum:
          - dynamic
          example: dynamic
          type: string
        template:
          $ref: '#/components/schemas/attribute_default_value_anyOf_template'
      required:
      - template
      - type
    attribute_default_value_anyOf_1:
      properties:
        type:
          enum:
          - static
          example: static
          type: string
        template:
          example:
          - value: Some default text
            attribute_type: text
          items:
            $ref: '#/components/schemas/output-value'
          type: array
      required:
      - template
      - type
    attribute_default_value:
      anyOf:
      - $ref: '#/components/schemas/attribute_default_value_anyOf'
      - $ref: '#/components/schemas/attribute_default_value_anyOf_1'
      description: "The default value for this attribute. Static values are used to\
        \ directly populate values using their contents. Dynamic values are used to\
        \ lookup data at the point of creation. For example, you could use a dynamic\
        \ value to insert a value for the currently logged in user. Which default\
        \ values are available is dependent on the type of the attribute."
      nullable: true
    attribute_relationship:
      description: "If this attribute is related to another attribute, this is an\
        \ object that includes an `id` property that identifies the other attribute.\
        \ `null` means no relationship exists. See [the help center](https://attio.com/help/reference/managing-your-data/attributes#relationship-attributes)\
        \ for more details about relationship attributes."
      properties:
        id:
          $ref: '#/components/schemas/attribute_id'
      required:
      - id
    attribute_config_currency:
      description: Configuration available for attributes of type "currency".
      properties:
        default_currency_code:
          description: The ISO4217 code representing the currency that values for
            this attribute should be stored in.
          enum:
          - AUD
          - BRL
          - BEL
          - CAD
          - CNY
          - DKK
          - EUR
          - HKD
          - ISK
          - INR
          - ILS
          - JPY
          - KRW
          - MYR
          - NTD
          - NZD
          - NOK
          - PHP
          - PLN
          - GBP
          - SGD
          - ZAR
          - SEK
          - CHF
          - AED
          - USD
          example: USD
          nullable: true
          type: string
        display_type:
          description: "How the currency should be displayed across the app. \"code\"\
            \ will display the ISO currency code e.g. \"USD\", \"name\" will display\
            \ the localized currency name e.g. \"British pound\", \"narrowSymbol\"\
            \ will display \"$1\" instead of \"US$1\" and \"symbol\" will display\
            \ a localized currency symbol such as \"$\"."
          enum:
          - code
          - name
          - narrowSymbol
          - symbol
          example: code
          nullable: true
          type: string
      required:
      - default_currency_code
      - display_type
    attribute_config_record_reference:
      description: Configuration available for attributes of type "record-reference".
      properties:
        allowed_object_ids:
          description: A list of UUIDs to indicate which objects records are allowed
            to belong to. Leave empty to to allow records from all object types.
          items:
            example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - allowed_object_ids
    attribute_config:
      description: "Additional, type-dependent configuration for the attribute."
      properties:
        currency:
          $ref: '#/components/schemas/attribute_config_currency'
        record_reference:
          $ref: '#/components/schemas/attribute_config_record_reference'
      required:
      - currency
      - record_reference
    list_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
      properties:
        workspace_id:
          description: A UUID to identify the workspace this list belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        list_id:
          description: A UUID to identify this list.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          format: uuid
          type: string
      required:
      - list_id
      - workspace_id
    list_created_by_actor:
      description: The actor which created this list.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    object_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        workspace_id:
          description: A UUID to identify the workspace this object belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        object_id:
          description: A UUID to identify the object.
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
      required:
      - object_id
      - workspace_id
    workspace_member_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        workspace_member_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        workspace_id:
          description: The ID of the workspace the workspace member belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        workspace_member_id:
          description: The ID of the workspace member.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
      required:
      - workspace_id
      - workspace_member_id
    comment_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        comment_id: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
      properties:
        workspace_id:
          description: The ID of the workspace the comment belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        comment_id:
          description: The ID of the comment.
          example: aa1dc1d9-93ac-4c6c-987e-16b6eea9aab2
          format: uuid
          type: string
      required:
      - comment_id
      - workspace_id
    comment_entry:
      description: "The entry the comment belongs to, `null` for comments on records."
      example:
        list_id: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
        entry_id: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
      properties:
        entry_id:
          description: The ID of the entry the comment belongs to.
          example: 2e6e29ea-c4e0-4f44-842d-78a891f8c156
          format: uuid
          type: string
        list_id:
          description: The ID of the list the entry belongs to.
          example: 33ebdbe9-e529-47c9-b894-0ba25e9c15c0
          format: uuid
          type: string
      required:
      - entry_id
      - list_id
    comment_record:
      description: The record the comment belongs to.
      example:
        record_id: bf071e1f-6035-429d-b874-d83ea64ea13b
        object_id: 97052eb9-e65e-443f-a297-f2d9a4a7f795
      properties:
        record_id:
          description: The ID of the record the comment belongs to.
          example: bf071e1f-6035-429d-b874-d83ea64ea13b
          format: uuid
          type: string
        object_id:
          description: The ID of the object the record belongs to.
          example: 97052eb9-e65e-443f-a297-f2d9a4a7f795
          format: uuid
          type: string
      required:
      - object_id
      - record_id
    comment_resolved_by:
      description: The actor that resolved this comment.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    comment_author:
      description: Who wrote this comment. Note that the API provides the ability
        for API tokens to write comments on behalf of other actors.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    note_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        note_id: ff3f3bd4-40f4-4f80-8187-cd02385af424
      properties:
        workspace_id:
          description: The ID of the workspace the note belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        note_id:
          description: The ID of the note.
          example: ff3f3bd4-40f4-4f80-8187-cd02385af424
          format: uuid
          type: string
      required:
      - note_id
      - workspace_id
    note_created_by_actor:
      description: The actor that created this note.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    task_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        task_id: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
      properties:
        workspace_id:
          description: The ID of the workspace the task belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        task_id:
          description: The ID of the task.
          example: 649e34f4-c39a-4f4d-99ef-48a36bef8f04
          format: uuid
          type: string
      required:
      - task_id
      - workspace_id
    task_linked_records_inner:
      example:
        target_object_id: people
        target_record_id: 891dcbfc-9141-415d-9b2a-2238a6cc012d
      properties:
        target_object_id:
          description: "The ID of the parent object the task refers to. At present,\
            \ only `people` and `companies` are supported."
          example: people
          type: string
        target_record_id:
          description: The ID of the parent record the task refers to.
          example: 891dcbfc-9141-415d-9b2a-2238a6cc012d
          format: uuid
          type: string
      required:
      - target_object_id
      - target_record_id
    task_assignees_inner:
      example:
        referenced_actor_type: workspace-member
        referenced_actor_id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        referenced_actor_type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          example: workspace-member
          type: string
        referenced_actor_id:
          description: The ID of the workspace member actor assigned to this task.
          example: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
          format: uuid
          type: string
      required:
      - referenced_actor_id
      - referenced_actor_type
    task_created_by_actor:
      description: The actor that created this task.
      example:
        type: workspace-member
        id: 50cf242c-7fa3-4cad-87d0-75b1af71c57b
      properties:
        id:
          description: An ID to identify the actor.
          type: string
          nullable: true
        type:
          description: "The type of actor. [Read more information on actor types here](/docs/actors)."
          enum:
          - api-token
          - workspace-member
          - system
          type: string
          nullable: true
    thread_id:
      example:
        workspace_id: 14beef7a-99f7-4534-a87e-70b564330a4c
        thread_id: a649e4d9-435c-43fb-83ba-847b4876f27a
      properties:
        workspace_id:
          description: The ID of the workspace the thread belongs to.
          example: 14beef7a-99f7-4534-a87e-70b564330a4c
          format: uuid
          type: string
        thread_id:
          description: The ID of the thread.
          example: a649e4d9-435c-43fb-83ba-847b4876f27a
          format: uuid
          type: string
      required:
      - thread_id
      - workspace_id
  securitySchemes:
    oauth2:
      description: This API uses OAuth 2.0 with the authorization code grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://app.attio.com/authorize
          scopes:
            user_management:read: View workspace members.
            user_management:read-write: View workspace members.
            record_permission:read: "View, and optionally write, records."
            record_permission:read-write: "View, and optionally write, records."
            object_configuration:read: "View, and optionally write, the configuration\
              \ and attributes of objects."
            object_configuration:read-write: "View, and optionally write, the configuration\
              \ and attributes of objects."
            list_entry:read: "View, and optionally write, the entries in a list."
            list_entry:read-write: "View, and optionally write, the entries in a list."
            list_configuration:read: "View, and optionally write, the configuration\
              \ and attributes of lists."
            list_configuration:read-write: "View, and optionally write, the configuration\
              \ and attributes of lists."
            public_collection:read: "View, and optionally write, both the settings\
              \ and information within public collections."
            public_collection:read-write: "View, and optionally write, both the settings\
              \ and information within public collections."
            private_collection:read: "View, and optionally modify, both the settings\
              \ and information of all collections within the workspace, regardless\
              \ of their access settings."
            private_collection:read-write: "View, and optionally modify, both the\
              \ settings and information of all collections within the workspace,\
              \ regardless of their access settings."
            comment:read: "View comments (and threads), and optionally write comments."
            comment:read-write: "View comments (and threads), and optionally write\
              \ comments."
            task:read: "View, and optionally write, tasks."
            task:read-write: "View, and optionally write, tasks."
            note:read: "View, and optionally write, notes."
            note:read-write: "View, and optionally write, notes."
            webhook:read: "View, and optionally manage, webhooks."
            webhook:read-write: "View, and optionally manage, webhooks."
          tokenUrl: https://app.attio.com/oauth/token
      type: oauth2
x-readme:
  explorer-enabled: true
  proxy-enabled: true
