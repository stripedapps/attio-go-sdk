/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkspaceMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceMember{}

// WorkspaceMember struct for WorkspaceMember
type WorkspaceMember struct {
	Id WorkspaceMemberId `json:"id"`
	// The first name of the user.
	FirstName string `json:"first_name"`
	// The last name of the user.
	LastName string `json:"last_name"`
	// A URL to the user's avatar image.
	AvatarUrl NullableString `json:"avatar_url"`
	// The user's email address.
	EmailAddress string `json:"email_address"`
	// When the workspace member was created.
	CreatedAt string `json:"created_at"`
	// Whether the workspace member is suspended or not and what level of privileges they have inside the workspace. We do not delete workspace members so that you can successfully attribute past actions to suspended workspace members.
	AccessLevel string `json:"access_level"`
}

type _WorkspaceMember WorkspaceMember

// NewWorkspaceMember instantiates a new WorkspaceMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceMember(id WorkspaceMemberId, firstName string, lastName string, avatarUrl NullableString, emailAddress string, createdAt string, accessLevel string) *WorkspaceMember {
	this := WorkspaceMember{}
	this.Id = id
	this.FirstName = firstName
	this.LastName = lastName
	this.AvatarUrl = avatarUrl
	this.EmailAddress = emailAddress
	this.CreatedAt = createdAt
	this.AccessLevel = accessLevel
	return &this
}

// NewWorkspaceMemberWithDefaults instantiates a new WorkspaceMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceMemberWithDefaults() *WorkspaceMember {
	this := WorkspaceMember{}
	return &this
}

// GetId returns the Id field value
func (o *WorkspaceMember) GetId() WorkspaceMemberId {
	if o == nil {
		var ret WorkspaceMemberId
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetIdOk() (*WorkspaceMemberId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceMember) SetId(v WorkspaceMemberId) {
	o.Id = v
}

// GetFirstName returns the FirstName field value
func (o *WorkspaceMember) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *WorkspaceMember) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *WorkspaceMember) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *WorkspaceMember) SetLastName(v string) {
	o.LastName = v
}

// GetAvatarUrl returns the AvatarUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WorkspaceMember) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkspaceMember) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// SetAvatarUrl sets field value
func (o *WorkspaceMember) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}

// GetEmailAddress returns the EmailAddress field value
func (o *WorkspaceMember) GetEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAddress, true
}

// SetEmailAddress sets field value
func (o *WorkspaceMember) SetEmailAddress(v string) {
	o.EmailAddress = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkspaceMember) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkspaceMember) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetAccessLevel returns the AccessLevel field value
func (o *WorkspaceMember) GetAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMember) GetAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessLevel, true
}

// SetAccessLevel sets field value
func (o *WorkspaceMember) SetAccessLevel(v string) {
	o.AccessLevel = v
}

func (o WorkspaceMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	toSerialize["avatar_url"] = o.AvatarUrl.Get()
	toSerialize["email_address"] = o.EmailAddress
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["access_level"] = o.AccessLevel
	return toSerialize, nil
}

func (o *WorkspaceMember) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"first_name",
		"last_name",
		"avatar_url",
		"email_address",
		"created_at",
		"access_level",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspaceMember := _WorkspaceMember{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspaceMember)

	if err != nil {
		return err
	}

	*o = WorkspaceMember(varWorkspaceMember)

	return err
}

type NullableWorkspaceMember struct {
	value *WorkspaceMember
	isSet bool
}

func (v NullableWorkspaceMember) Get() *WorkspaceMember {
	return v.value
}

func (v *NullableWorkspaceMember) Set(val *WorkspaceMember) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceMember) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceMember(val *WorkspaceMember) *NullableWorkspaceMember {
	return &NullableWorkspaceMember{value: val, isSet: true}
}

func (v NullableWorkspaceMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


