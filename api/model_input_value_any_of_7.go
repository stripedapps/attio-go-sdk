/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InputValueAnyOf7 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputValueAnyOf7{}

// InputValueAnyOf7 struct for InputValueAnyOf7
type InputValueAnyOf7 struct {
	// The first line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
	Line1 NullableString `json:"line_1"`
	// The second line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
	Line2 NullableString `json:"line_2"`
	// The third line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
	Line3 NullableString `json:"line_3"`
	// The fourth line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
	Line4 NullableString `json:"line_4"`
	// The town, neighborhood or area the location is in.
	Locality NullableString `json:"locality"`
	// The state, county, province or region that the location is in.
	Region NullableString `json:"region"`
	// The postcode or zip code for the location. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
	Postcode NullableString `json:"postcode"`
	// The ISO 3166-1 alpha-2 country code for the country this location is in.
	CountryCode NullableString `json:"country_code"`
	// The latitude of the location. Validated by the regular expression `/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/`. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
	Latitude NullableString `json:"latitude" validate:"regexp=^[-+]?([1-8]?\\\\d(\\\\.\\\\d+)?|90(\\\\.0+)?)$"`
	// The longitude of the location. Validated by the regular expression `/^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/`
	Longitude NullableString `json:"longitude" validate:"regexp=^[-+]?(180(\\\\.0+)?|((1[0-7]\\\\d)|([1-9]?\\\\d))(\\\\.\\\\d+)?)$"`
}

type _InputValueAnyOf7 InputValueAnyOf7

// NewInputValueAnyOf7 instantiates a new InputValueAnyOf7 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputValueAnyOf7(line1 NullableString, line2 NullableString, line3 NullableString, line4 NullableString, locality NullableString, region NullableString, postcode NullableString, countryCode NullableString, latitude NullableString, longitude NullableString) *InputValueAnyOf7 {
	this := InputValueAnyOf7{}
	this.Line1 = line1
	this.Line2 = line2
	this.Line3 = line3
	this.Line4 = line4
	this.Locality = locality
	this.Region = region
	this.Postcode = postcode
	this.CountryCode = countryCode
	this.Latitude = latitude
	this.Longitude = longitude
	return &this
}

// NewInputValueAnyOf7WithDefaults instantiates a new InputValueAnyOf7 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputValueAnyOf7WithDefaults() *InputValueAnyOf7 {
	this := InputValueAnyOf7{}
	return &this
}

// GetLine1 returns the Line1 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLine1() string {
	if o == nil || o.Line1.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line1.Get()
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line1.Get(), o.Line1.IsSet()
}

// SetLine1 sets field value
func (o *InputValueAnyOf7) SetLine1(v string) {
	o.Line1.Set(&v)
}

// GetLine2 returns the Line2 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLine2() string {
	if o == nil || o.Line2.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line2.Get()
}

// GetLine2Ok returns a tuple with the Line2 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line2.Get(), o.Line2.IsSet()
}

// SetLine2 sets field value
func (o *InputValueAnyOf7) SetLine2(v string) {
	o.Line2.Set(&v)
}

// GetLine3 returns the Line3 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLine3() string {
	if o == nil || o.Line3.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line3.Get()
}

// GetLine3Ok returns a tuple with the Line3 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLine3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line3.Get(), o.Line3.IsSet()
}

// SetLine3 sets field value
func (o *InputValueAnyOf7) SetLine3(v string) {
	o.Line3.Set(&v)
}

// GetLine4 returns the Line4 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLine4() string {
	if o == nil || o.Line4.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line4.Get()
}

// GetLine4Ok returns a tuple with the Line4 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLine4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line4.Get(), o.Line4.IsSet()
}

// SetLine4 sets field value
func (o *InputValueAnyOf7) SetLine4(v string) {
	o.Line4.Set(&v)
}

// GetLocality returns the Locality field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLocality() string {
	if o == nil || o.Locality.Get() == nil {
		var ret string
		return ret
	}

	return *o.Locality.Get()
}

// GetLocalityOk returns a tuple with the Locality field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLocalityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locality.Get(), o.Locality.IsSet()
}

// SetLocality sets field value
func (o *InputValueAnyOf7) SetLocality(v string) {
	o.Locality.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *InputValueAnyOf7) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetPostcode returns the Postcode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetPostcode() string {
	if o == nil || o.Postcode.Get() == nil {
		var ret string
		return ret
	}

	return *o.Postcode.Get()
}

// GetPostcodeOk returns a tuple with the Postcode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetPostcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Postcode.Get(), o.Postcode.IsSet()
}

// SetPostcode sets field value
func (o *InputValueAnyOf7) SetPostcode(v string) {
	o.Postcode.Set(&v)
}

// GetCountryCode returns the CountryCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetCountryCode() string {
	if o == nil || o.CountryCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// SetCountryCode sets field value
func (o *InputValueAnyOf7) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}

// GetLatitude returns the Latitude field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLatitude() string {
	if o == nil || o.Latitude.Get() == nil {
		var ret string
		return ret
	}

	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLatitudeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// SetLatitude sets field value
func (o *InputValueAnyOf7) SetLatitude(v string) {
	o.Latitude.Set(&v)
}

// GetLongitude returns the Longitude field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InputValueAnyOf7) GetLongitude() string {
	if o == nil || o.Longitude.Get() == nil {
		var ret string
		return ret
	}

	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf7) GetLongitudeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// SetLongitude sets field value
func (o *InputValueAnyOf7) SetLongitude(v string) {
	o.Longitude.Set(&v)
}

func (o InputValueAnyOf7) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputValueAnyOf7) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["line_1"] = o.Line1.Get()
	toSerialize["line_2"] = o.Line2.Get()
	toSerialize["line_3"] = o.Line3.Get()
	toSerialize["line_4"] = o.Line4.Get()
	toSerialize["locality"] = o.Locality.Get()
	toSerialize["region"] = o.Region.Get()
	toSerialize["postcode"] = o.Postcode.Get()
	toSerialize["country_code"] = o.CountryCode.Get()
	toSerialize["latitude"] = o.Latitude.Get()
	toSerialize["longitude"] = o.Longitude.Get()
	return toSerialize, nil
}

func (o *InputValueAnyOf7) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"line_1",
		"line_2",
		"line_3",
		"line_4",
		"locality",
		"region",
		"postcode",
		"country_code",
		"latitude",
		"longitude",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInputValueAnyOf7 := _InputValueAnyOf7{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInputValueAnyOf7)

	if err != nil {
		return err
	}

	*o = InputValueAnyOf7(varInputValueAnyOf7)

	return err
}

type NullableInputValueAnyOf7 struct {
	value *InputValueAnyOf7
	isSet bool
}

func (v NullableInputValueAnyOf7) Get() *InputValueAnyOf7 {
	return v.value
}

func (v *NullableInputValueAnyOf7) Set(val *InputValueAnyOf7) {
	v.value = val
	v.isSet = true
}

func (v NullableInputValueAnyOf7) IsSet() bool {
	return v.isSet
}

func (v *NullableInputValueAnyOf7) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputValueAnyOf7(val *InputValueAnyOf7) *NullableInputValueAnyOf7 {
	return &NullableInputValueAnyOf7{value: val, isSet: true}
}

func (v NullableInputValueAnyOf7) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputValueAnyOf7) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


