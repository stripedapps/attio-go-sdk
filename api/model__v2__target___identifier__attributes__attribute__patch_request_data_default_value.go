/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue - The default value for this attribute. Static values are used to directly populate values using their contents. Dynamic values are used to lookup data at the point of creation. For example, you could use a dynamic value to insert a value for the currently logged in user. Which default values are available is dependent on the type of the attribute. Default values are not currently supported on people or company objects.
type V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue struct {
	V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf *V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf
	V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 *V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1
}

// V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOfAsV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue is a convenience function that returns V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf wrapped in V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue
func V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOfAsV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue(v *V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf) V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue {
	return V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue{
		V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf: v,
	}
}

// V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1AsV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue is a convenience function that returns V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 wrapped in V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue
func V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1AsV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue(v *V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1) V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue {
	return V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue{
		V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf
	err = newStrictDecoder(data).Decode(&dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf)
	if err == nil {
		jsonV2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf, _ := json.Marshal(dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf)
		if string(jsonV2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf) == "{}" { // empty struct
			dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf = nil
		} else {
			if err = validator.Validate(dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf); err != nil {
				dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf = nil
	}

	// try to unmarshal data into V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1
	err = newStrictDecoder(data).Decode(&dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1)
	if err == nil {
		jsonV2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1, _ := json.Marshal(dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1)
		if string(jsonV2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1) == "{}" { // empty struct
			dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 = nil
		} else {
			if err = validator.Validate(dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1); err != nil {
				dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf = nil
		dst.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) MarshalJSON() ([]byte, error) {
	if src.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf != nil {
		return json.Marshal(&src.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf)
	}

	if src.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 != nil {
		return json.Marshal(&src.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf != nil {
		return obj.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf
	}

	if obj.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1 != nil {
		return obj.V2TargetIdentifierAttributesPostRequestDataDefaultValueOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue struct {
	value *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue
	isSet bool
}

func (v NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) Get() *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue {
	return v.value
}

func (v *NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) Set(val *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) {
	v.value = val
	v.isSet = true
}

func (v NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) IsSet() bool {
	return v.isSet
}

func (v *NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue(val *V2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) *NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue {
	return &NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue{value: val, isSet: true}
}

func (v NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2TargetIdentifierAttributesAttributePatchRequestDataDefaultValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


