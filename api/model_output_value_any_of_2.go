/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutputValueAnyOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputValueAnyOf2{}

// OutputValueAnyOf2 struct for OutputValueAnyOf2
type OutputValueAnyOf2 struct {
	// A numerical representation of the currency value. A decimal with a max of 4 decimal places.
	CurrencyValue float32 `json:"currency_value"`
	// The ISO4217 currency code representing the currency that the value is stored in.
	CurrencyCode NullableString `json:"currency_code,omitempty"`
	// The attribute type of the value.
	AttributeType string `json:"attribute_type"`
}

type _OutputValueAnyOf2 OutputValueAnyOf2

// NewOutputValueAnyOf2 instantiates a new OutputValueAnyOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputValueAnyOf2(currencyValue float32, attributeType string) *OutputValueAnyOf2 {
	this := OutputValueAnyOf2{}
	this.CurrencyValue = currencyValue
	this.AttributeType = attributeType
	return &this
}

// NewOutputValueAnyOf2WithDefaults instantiates a new OutputValueAnyOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputValueAnyOf2WithDefaults() *OutputValueAnyOf2 {
	this := OutputValueAnyOf2{}
	return &this
}

// GetCurrencyValue returns the CurrencyValue field value
func (o *OutputValueAnyOf2) GetCurrencyValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CurrencyValue
}

// GetCurrencyValueOk returns a tuple with the CurrencyValue field value
// and a boolean to check if the value has been set.
func (o *OutputValueAnyOf2) GetCurrencyValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyValue, true
}

// SetCurrencyValue sets field value
func (o *OutputValueAnyOf2) SetCurrencyValue(v float32) {
	o.CurrencyValue = v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutputValueAnyOf2) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.CurrencyCode.Get()
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutputValueAnyOf2) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyCode.Get(), o.CurrencyCode.IsSet()
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *OutputValueAnyOf2) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given NullableString and assigns it to the CurrencyCode field.
func (o *OutputValueAnyOf2) SetCurrencyCode(v string) {
	o.CurrencyCode.Set(&v)
}
// SetCurrencyCodeNil sets the value for CurrencyCode to be an explicit nil
func (o *OutputValueAnyOf2) SetCurrencyCodeNil() {
	o.CurrencyCode.Set(nil)
}

// UnsetCurrencyCode ensures that no value is present for CurrencyCode, not even an explicit nil
func (o *OutputValueAnyOf2) UnsetCurrencyCode() {
	o.CurrencyCode.Unset()
}

// GetAttributeType returns the AttributeType field value
func (o *OutputValueAnyOf2) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *OutputValueAnyOf2) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *OutputValueAnyOf2) SetAttributeType(v string) {
	o.AttributeType = v
}

func (o OutputValueAnyOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputValueAnyOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency_value"] = o.CurrencyValue
	if o.CurrencyCode.IsSet() {
		toSerialize["currency_code"] = o.CurrencyCode.Get()
	}
	toSerialize["attribute_type"] = o.AttributeType
	return toSerialize, nil
}

func (o *OutputValueAnyOf2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency_value",
		"attribute_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutputValueAnyOf2 := _OutputValueAnyOf2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutputValueAnyOf2)

	if err != nil {
		return err
	}

	*o = OutputValueAnyOf2(varOutputValueAnyOf2)

	return err
}

type NullableOutputValueAnyOf2 struct {
	value *OutputValueAnyOf2
	isSet bool
}

func (v NullableOutputValueAnyOf2) Get() *OutputValueAnyOf2 {
	return v.value
}

func (v *NullableOutputValueAnyOf2) Set(val *OutputValueAnyOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputValueAnyOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputValueAnyOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputValueAnyOf2(val *OutputValueAnyOf2) *NullableOutputValueAnyOf2 {
	return &NullableOutputValueAnyOf2{value: val, isSet: true}
}

func (v NullableOutputValueAnyOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputValueAnyOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


