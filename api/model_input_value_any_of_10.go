/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InputValueAnyOf10 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputValueAnyOf10{}

// InputValueAnyOf10 struct for InputValueAnyOf10
type InputValueAnyOf10 struct {
	// A phone number which is either a) prefixed with a country code (e.g. `+44....`) or b) a local number, where `country_code` is specified in addition.
	OriginalPhoneNumber string `json:"original_phone_number"`
	// The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to. Optional if `original_phone_number` includes a country code prefix.
	CountryCode NullableString `json:"country_code,omitempty"`
}

type _InputValueAnyOf10 InputValueAnyOf10

// NewInputValueAnyOf10 instantiates a new InputValueAnyOf10 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputValueAnyOf10(originalPhoneNumber string) *InputValueAnyOf10 {
	this := InputValueAnyOf10{}
	this.OriginalPhoneNumber = originalPhoneNumber
	return &this
}

// NewInputValueAnyOf10WithDefaults instantiates a new InputValueAnyOf10 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputValueAnyOf10WithDefaults() *InputValueAnyOf10 {
	this := InputValueAnyOf10{}
	return &this
}

// GetOriginalPhoneNumber returns the OriginalPhoneNumber field value
func (o *InputValueAnyOf10) GetOriginalPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalPhoneNumber
}

// GetOriginalPhoneNumberOk returns a tuple with the OriginalPhoneNumber field value
// and a boolean to check if the value has been set.
func (o *InputValueAnyOf10) GetOriginalPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalPhoneNumber, true
}

// SetOriginalPhoneNumber sets field value
func (o *InputValueAnyOf10) SetOriginalPhoneNumber(v string) {
	o.OriginalPhoneNumber = v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InputValueAnyOf10) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputValueAnyOf10) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field has been set.
func (o *InputValueAnyOf10) HasCountryCode() bool {
	if o != nil && o.CountryCode.IsSet() {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *InputValueAnyOf10) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}
// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *InputValueAnyOf10) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *InputValueAnyOf10) UnsetCountryCode() {
	o.CountryCode.Unset()
}

func (o InputValueAnyOf10) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputValueAnyOf10) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["original_phone_number"] = o.OriginalPhoneNumber
	if o.CountryCode.IsSet() {
		toSerialize["country_code"] = o.CountryCode.Get()
	}
	return toSerialize, nil
}

func (o *InputValueAnyOf10) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"original_phone_number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInputValueAnyOf10 := _InputValueAnyOf10{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInputValueAnyOf10)

	if err != nil {
		return err
	}

	*o = InputValueAnyOf10(varInputValueAnyOf10)

	return err
}

type NullableInputValueAnyOf10 struct {
	value *InputValueAnyOf10
	isSet bool
}

func (v NullableInputValueAnyOf10) Get() *InputValueAnyOf10 {
	return v.value
}

func (v *NullableInputValueAnyOf10) Set(val *InputValueAnyOf10) {
	v.value = val
	v.isSet = true
}

func (v NullableInputValueAnyOf10) IsSet() bool {
	return v.isSet
}

func (v *NullableInputValueAnyOf10) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputValueAnyOf10(val *InputValueAnyOf10) *NullableInputValueAnyOf10 {
	return &NullableInputValueAnyOf10{value: val, isSet: true}
}

func (v NullableInputValueAnyOf10) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputValueAnyOf10) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


