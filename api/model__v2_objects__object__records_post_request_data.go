/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V2ObjectsObjectRecordsPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsObjectRecordsPostRequestData{}

// V2ObjectsObjectRecordsPostRequestData struct for V2ObjectsObjectRecordsPostRequestData
type V2ObjectsObjectRecordsPostRequestData struct {
	// An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
	Values map[string][]interface{} `json:"values"`
}

type _V2ObjectsObjectRecordsPostRequestData V2ObjectsObjectRecordsPostRequestData

// NewV2ObjectsObjectRecordsPostRequestData instantiates a new V2ObjectsObjectRecordsPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsObjectRecordsPostRequestData(values map[string][]interface{}) *V2ObjectsObjectRecordsPostRequestData {
	this := V2ObjectsObjectRecordsPostRequestData{}
	this.Values = values
	return &this
}

// NewV2ObjectsObjectRecordsPostRequestDataWithDefaults instantiates a new V2ObjectsObjectRecordsPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsObjectRecordsPostRequestDataWithDefaults() *V2ObjectsObjectRecordsPostRequestData {
	this := V2ObjectsObjectRecordsPostRequestData{}
	return &this
}

// GetValues returns the Values field value
func (o *V2ObjectsObjectRecordsPostRequestData) GetValues() map[string][]interface{} {
	if o == nil {
		var ret map[string][]interface{}
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsObjectRecordsPostRequestData) GetValuesOk() (map[string][]interface{}, bool) {
	if o == nil {
		return map[string][]interface{}{}, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *V2ObjectsObjectRecordsPostRequestData) SetValues(v map[string][]interface{}) {
	o.Values = v
}

func (o V2ObjectsObjectRecordsPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsObjectRecordsPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

func (o *V2ObjectsObjectRecordsPostRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsObjectRecordsPostRequestData := _V2ObjectsObjectRecordsPostRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2ObjectsObjectRecordsPostRequestData)

	if err != nil {
		return err
	}

	*o = V2ObjectsObjectRecordsPostRequestData(varV2ObjectsObjectRecordsPostRequestData)

	return err
}

type NullableV2ObjectsObjectRecordsPostRequestData struct {
	value *V2ObjectsObjectRecordsPostRequestData
	isSet bool
}

func (v NullableV2ObjectsObjectRecordsPostRequestData) Get() *V2ObjectsObjectRecordsPostRequestData {
	return v.value
}

func (v *NullableV2ObjectsObjectRecordsPostRequestData) Set(val *V2ObjectsObjectRecordsPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsObjectRecordsPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsObjectRecordsPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsObjectRecordsPostRequestData(val *V2ObjectsObjectRecordsPostRequestData) *NullableV2ObjectsObjectRecordsPostRequestData {
	return &NullableV2ObjectsObjectRecordsPostRequestData{value: val, isSet: true}
}

func (v NullableV2ObjectsObjectRecordsPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsObjectRecordsPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


