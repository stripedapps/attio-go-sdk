/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InputValueAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputValueAnyOf{}

// InputValueAnyOf struct for InputValueAnyOf
type InputValueAnyOf struct {
	// The type of the referenced actor. Currently, only workspace members can be written into actor reference attributes. [Read more information on actor types here](/docs/actors).
	ReferencedActorType string `json:"referenced_actor_type"`
	// The ID of the referenced Actor.
	ReferencedActorId string `json:"referenced_actor_id"`
}

type _InputValueAnyOf InputValueAnyOf

// NewInputValueAnyOf instantiates a new InputValueAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputValueAnyOf(referencedActorType string, referencedActorId string) *InputValueAnyOf {
	this := InputValueAnyOf{}
	this.ReferencedActorType = referencedActorType
	this.ReferencedActorId = referencedActorId
	return &this
}

// NewInputValueAnyOfWithDefaults instantiates a new InputValueAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputValueAnyOfWithDefaults() *InputValueAnyOf {
	this := InputValueAnyOf{}
	return &this
}

// GetReferencedActorType returns the ReferencedActorType field value
func (o *InputValueAnyOf) GetReferencedActorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferencedActorType
}

// GetReferencedActorTypeOk returns a tuple with the ReferencedActorType field value
// and a boolean to check if the value has been set.
func (o *InputValueAnyOf) GetReferencedActorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferencedActorType, true
}

// SetReferencedActorType sets field value
func (o *InputValueAnyOf) SetReferencedActorType(v string) {
	o.ReferencedActorType = v
}

// GetReferencedActorId returns the ReferencedActorId field value
func (o *InputValueAnyOf) GetReferencedActorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferencedActorId
}

// GetReferencedActorIdOk returns a tuple with the ReferencedActorId field value
// and a boolean to check if the value has been set.
func (o *InputValueAnyOf) GetReferencedActorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferencedActorId, true
}

// SetReferencedActorId sets field value
func (o *InputValueAnyOf) SetReferencedActorId(v string) {
	o.ReferencedActorId = v
}

func (o InputValueAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputValueAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["referenced_actor_type"] = o.ReferencedActorType
	toSerialize["referenced_actor_id"] = o.ReferencedActorId
	return toSerialize, nil
}

func (o *InputValueAnyOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"referenced_actor_type",
		"referenced_actor_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInputValueAnyOf := _InputValueAnyOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInputValueAnyOf)

	if err != nil {
		return err
	}

	*o = InputValueAnyOf(varInputValueAnyOf)

	return err
}

type NullableInputValueAnyOf struct {
	value *InputValueAnyOf
	isSet bool
}

func (v NullableInputValueAnyOf) Get() *InputValueAnyOf {
	return v.value
}

func (v *NullableInputValueAnyOf) Set(val *InputValueAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInputValueAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInputValueAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputValueAnyOf(val *InputValueAnyOf) *NullableInputValueAnyOf {
	return &NullableInputValueAnyOf{value: val, isSet: true}
}

func (v NullableInputValueAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputValueAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


