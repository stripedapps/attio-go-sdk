/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutputValueAnyOf15 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputValueAnyOf15{}

// OutputValueAnyOf15 struct for OutputValueAnyOf15
type OutputValueAnyOf15 struct {
	// The UUID identifying the selected select option.
	Option string `json:"option"`
	// The attribute type of the value.
	AttributeType string `json:"attribute_type"`
}

type _OutputValueAnyOf15 OutputValueAnyOf15

// NewOutputValueAnyOf15 instantiates a new OutputValueAnyOf15 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputValueAnyOf15(option string, attributeType string) *OutputValueAnyOf15 {
	this := OutputValueAnyOf15{}
	this.Option = option
	this.AttributeType = attributeType
	return &this
}

// NewOutputValueAnyOf15WithDefaults instantiates a new OutputValueAnyOf15 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputValueAnyOf15WithDefaults() *OutputValueAnyOf15 {
	this := OutputValueAnyOf15{}
	return &this
}

// GetOption returns the Option field value
func (o *OutputValueAnyOf15) GetOption() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Option
}

// GetOptionOk returns a tuple with the Option field value
// and a boolean to check if the value has been set.
func (o *OutputValueAnyOf15) GetOptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Option, true
}

// SetOption sets field value
func (o *OutputValueAnyOf15) SetOption(v string) {
	o.Option = v
}

// GetAttributeType returns the AttributeType field value
func (o *OutputValueAnyOf15) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *OutputValueAnyOf15) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *OutputValueAnyOf15) SetAttributeType(v string) {
	o.AttributeType = v
}

func (o OutputValueAnyOf15) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputValueAnyOf15) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["option"] = o.Option
	toSerialize["attribute_type"] = o.AttributeType
	return toSerialize, nil
}

func (o *OutputValueAnyOf15) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"option",
		"attribute_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutputValueAnyOf15 := _OutputValueAnyOf15{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutputValueAnyOf15)

	if err != nil {
		return err
	}

	*o = OutputValueAnyOf15(varOutputValueAnyOf15)

	return err
}

type NullableOutputValueAnyOf15 struct {
	value *OutputValueAnyOf15
	isSet bool
}

func (v NullableOutputValueAnyOf15) Get() *OutputValueAnyOf15 {
	return v.value
}

func (v *NullableOutputValueAnyOf15) Set(val *OutputValueAnyOf15) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputValueAnyOf15) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputValueAnyOf15) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputValueAnyOf15(val *OutputValueAnyOf15) *NullableOutputValueAnyOf15 {
	return &NullableOutputValueAnyOf15{value: val, isSet: true}
}

func (v NullableOutputValueAnyOf15) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputValueAnyOf15) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


