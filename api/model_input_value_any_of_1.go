/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InputValueAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputValueAnyOf1{}

// InputValueAnyOf1 struct for InputValueAnyOf1
type InputValueAnyOf1 struct {
	// Workspace member actors can be referenced by email address as well as actor ID.
	WorkspaceMemberEmailAddress string `json:"workspace_member_email_address"`
}

type _InputValueAnyOf1 InputValueAnyOf1

// NewInputValueAnyOf1 instantiates a new InputValueAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputValueAnyOf1(workspaceMemberEmailAddress string) *InputValueAnyOf1 {
	this := InputValueAnyOf1{}
	this.WorkspaceMemberEmailAddress = workspaceMemberEmailAddress
	return &this
}

// NewInputValueAnyOf1WithDefaults instantiates a new InputValueAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputValueAnyOf1WithDefaults() *InputValueAnyOf1 {
	this := InputValueAnyOf1{}
	return &this
}

// GetWorkspaceMemberEmailAddress returns the WorkspaceMemberEmailAddress field value
func (o *InputValueAnyOf1) GetWorkspaceMemberEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceMemberEmailAddress
}

// GetWorkspaceMemberEmailAddressOk returns a tuple with the WorkspaceMemberEmailAddress field value
// and a boolean to check if the value has been set.
func (o *InputValueAnyOf1) GetWorkspaceMemberEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceMemberEmailAddress, true
}

// SetWorkspaceMemberEmailAddress sets field value
func (o *InputValueAnyOf1) SetWorkspaceMemberEmailAddress(v string) {
	o.WorkspaceMemberEmailAddress = v
}

func (o InputValueAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputValueAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workspace_member_email_address"] = o.WorkspaceMemberEmailAddress
	return toSerialize, nil
}

func (o *InputValueAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"workspace_member_email_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInputValueAnyOf1 := _InputValueAnyOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInputValueAnyOf1)

	if err != nil {
		return err
	}

	*o = InputValueAnyOf1(varInputValueAnyOf1)

	return err
}

type NullableInputValueAnyOf1 struct {
	value *InputValueAnyOf1
	isSet bool
}

func (v NullableInputValueAnyOf1) Get() *InputValueAnyOf1 {
	return v.value
}

func (v *NullableInputValueAnyOf1) Set(val *InputValueAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableInputValueAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableInputValueAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputValueAnyOf1(val *InputValueAnyOf1) *NullableInputValueAnyOf1 {
	return &NullableInputValueAnyOf1{value: val, isSet: true}
}

func (v NullableInputValueAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputValueAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


