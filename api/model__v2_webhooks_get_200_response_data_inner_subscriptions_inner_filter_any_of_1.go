/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1{}

// V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 struct for V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1
type V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 struct {
	And []V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner `json:"$and"`
}

type _V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1

// NewV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 instantiates a new V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1(and []V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner) *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 {
	this := V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1{}
	this.And = and
	return &this
}

// NewV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1WithDefaults instantiates a new V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1WithDefaults() *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 {
	this := V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1{}
	return &this
}

// GetAnd returns the And field value
func (o *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) GetAnd() []V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner {
	if o == nil {
		var ret []V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner
		return ret
	}

	return o.And
}

// GetAndOk returns a tuple with the And field value
// and a boolean to check if the value has been set.
func (o *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) GetAndOk() ([]V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.And, true
}

// SetAnd sets field value
func (o *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) SetAnd(v []V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOfOrInner) {
	o.And = v
}

func (o V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["$and"] = o.And
	return toSerialize, nil
}

func (o *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$and",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 := _V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1)

	if err != nil {
		return err
	}

	*o = V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1(varV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1)

	return err
}

type NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 struct {
	value *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1
	isSet bool
}

func (v NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) Get() *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 {
	return v.value
}

func (v *NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) Set(val *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1(val *V2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) *NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1 {
	return &NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1{value: val, isSet: true}
}

func (v NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2WebhooksGet200ResponseDataInnerSubscriptionsInnerFilterAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


