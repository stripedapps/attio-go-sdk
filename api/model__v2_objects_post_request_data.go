/*
Attio API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: support@attio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V2ObjectsPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2ObjectsPostRequestData{}

// V2ObjectsPostRequestData struct for V2ObjectsPostRequestData
type V2ObjectsPostRequestData struct {
	// A unique, human-readable slug to access the object through URLs and API calls. Should be formatted in snake case.
	ApiSlug string `json:"api_slug"`
	// The singular form of the object's name.
	SingularNoun string `json:"singular_noun"`
	// The plural form of the object's name.
	PluralNoun string `json:"plural_noun"`
}

type _V2ObjectsPostRequestData V2ObjectsPostRequestData

// NewV2ObjectsPostRequestData instantiates a new V2ObjectsPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ObjectsPostRequestData(apiSlug string, singularNoun string, pluralNoun string) *V2ObjectsPostRequestData {
	this := V2ObjectsPostRequestData{}
	this.ApiSlug = apiSlug
	this.SingularNoun = singularNoun
	this.PluralNoun = pluralNoun
	return &this
}

// NewV2ObjectsPostRequestDataWithDefaults instantiates a new V2ObjectsPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ObjectsPostRequestDataWithDefaults() *V2ObjectsPostRequestData {
	this := V2ObjectsPostRequestData{}
	return &this
}

// GetApiSlug returns the ApiSlug field value
func (o *V2ObjectsPostRequestData) GetApiSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiSlug
}

// GetApiSlugOk returns a tuple with the ApiSlug field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsPostRequestData) GetApiSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiSlug, true
}

// SetApiSlug sets field value
func (o *V2ObjectsPostRequestData) SetApiSlug(v string) {
	o.ApiSlug = v
}

// GetSingularNoun returns the SingularNoun field value
func (o *V2ObjectsPostRequestData) GetSingularNoun() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SingularNoun
}

// GetSingularNounOk returns a tuple with the SingularNoun field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsPostRequestData) GetSingularNounOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SingularNoun, true
}

// SetSingularNoun sets field value
func (o *V2ObjectsPostRequestData) SetSingularNoun(v string) {
	o.SingularNoun = v
}

// GetPluralNoun returns the PluralNoun field value
func (o *V2ObjectsPostRequestData) GetPluralNoun() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PluralNoun
}

// GetPluralNounOk returns a tuple with the PluralNoun field value
// and a boolean to check if the value has been set.
func (o *V2ObjectsPostRequestData) GetPluralNounOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluralNoun, true
}

// SetPluralNoun sets field value
func (o *V2ObjectsPostRequestData) SetPluralNoun(v string) {
	o.PluralNoun = v
}

func (o V2ObjectsPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2ObjectsPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_slug"] = o.ApiSlug
	toSerialize["singular_noun"] = o.SingularNoun
	toSerialize["plural_noun"] = o.PluralNoun
	return toSerialize, nil
}

func (o *V2ObjectsPostRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_slug",
		"singular_noun",
		"plural_noun",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV2ObjectsPostRequestData := _V2ObjectsPostRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV2ObjectsPostRequestData)

	if err != nil {
		return err
	}

	*o = V2ObjectsPostRequestData(varV2ObjectsPostRequestData)

	return err
}

type NullableV2ObjectsPostRequestData struct {
	value *V2ObjectsPostRequestData
	isSet bool
}

func (v NullableV2ObjectsPostRequestData) Get() *V2ObjectsPostRequestData {
	return v.value
}

func (v *NullableV2ObjectsPostRequestData) Set(val *V2ObjectsPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ObjectsPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ObjectsPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ObjectsPostRequestData(val *V2ObjectsPostRequestData) *NullableV2ObjectsPostRequestData {
	return &NullableV2ObjectsPostRequestData{value: val, isSet: true}
}

func (v NullableV2ObjectsPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ObjectsPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


